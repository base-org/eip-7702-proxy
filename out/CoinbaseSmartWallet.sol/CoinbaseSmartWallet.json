{"abi":[{"type":"constructor","inputs":[],"stateMutability":"nonpayable"},{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"},{"type":"function","name":"REPLAYABLE_NONCE_KEY","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addOwnerAddress","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addOwnerPublicKey","inputs":[{"name":"x","type":"bytes32","internalType":"bytes32"},{"name":"y","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"canSkipChainIdValidation","inputs":[{"name":"functionSelector","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"domainSeparator","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"eip712Domain","inputs":[],"outputs":[{"name":"fields","type":"bytes1","internalType":"bytes1"},{"name":"name","type":"string","internalType":"string"},{"name":"version","type":"string","internalType":"string"},{"name":"chainId","type":"uint256","internalType":"uint256"},{"name":"verifyingContract","type":"address","internalType":"address"},{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"extensions","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"entryPoint","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"execute","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"executeBatch","inputs":[{"name":"calls","type":"tuple[]","internalType":"struct CoinbaseSmartWallet.Call[]","components":[{"name":"target","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"executeWithoutChainIdValidation","inputs":[{"name":"calls","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"getUserOpHashWithoutChainId","inputs":[{"name":"userOp","type":"tuple","internalType":"struct UserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callGasLimit","type":"uint256","internalType":"uint256"},{"name":"verificationGasLimit","type":"uint256","internalType":"uint256"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"maxFeePerGas","type":"uint256","internalType":"uint256"},{"name":"maxPriorityFeePerGas","type":"uint256","internalType":"uint256"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"implementation","inputs":[],"outputs":[{"name":"$","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"initialize","inputs":[{"name":"owners","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"isOwnerAddress","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOwnerBytes","inputs":[{"name":"account","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOwnerPublicKey","inputs":[{"name":"x","type":"bytes32","internalType":"bytes32"},{"name":"y","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isValidSignature","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"},{"name":"signature","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"result","type":"bytes4","internalType":"bytes4"}],"stateMutability":"view"},{"type":"function","name":"nextOwnerIndex","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"ownerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"ownerCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"proxiableUUID","inputs":[],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"removeLastOwner","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"owner","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"owner","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removedOwnersCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"replaySafeHash","inputs":[{"name":"hash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"upgradeToAndCall","inputs":[{"name":"newImplementation","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"payable"},{"type":"function","name":"validateUserOp","inputs":[{"name":"userOp","type":"tuple","internalType":"struct UserOperation","components":[{"name":"sender","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"},{"name":"initCode","type":"bytes","internalType":"bytes"},{"name":"callData","type":"bytes","internalType":"bytes"},{"name":"callGasLimit","type":"uint256","internalType":"uint256"},{"name":"verificationGasLimit","type":"uint256","internalType":"uint256"},{"name":"preVerificationGas","type":"uint256","internalType":"uint256"},{"name":"maxFeePerGas","type":"uint256","internalType":"uint256"},{"name":"maxPriorityFeePerGas","type":"uint256","internalType":"uint256"},{"name":"paymasterAndData","type":"bytes","internalType":"bytes"},{"name":"signature","type":"bytes","internalType":"bytes"}]},{"name":"userOpHash","type":"bytes32","internalType":"bytes32"},{"name":"missingAccountFunds","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"validationData","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"event","name":"AddOwner","inputs":[{"name":"index","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RemoveOwner","inputs":[{"name":"index","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"Upgraded","inputs":[{"name":"implementation","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadyOwner","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"Initialized","inputs":[]},{"type":"error","name":"InvalidEthereumAddressOwner","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"InvalidNonceKey","inputs":[{"name":"key","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidOwnerBytesLength","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"LastOwner","inputs":[]},{"type":"error","name":"NoOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotLastOwner","inputs":[{"name":"ownersRemaining","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"SelectorNotAllowed","inputs":[{"name":"selector","type":"bytes4","internalType":"bytes4"}]},{"type":"error","name":"Unauthorized","inputs":[]},{"type":"error","name":"UnauthorizedCallContext","inputs":[]},{"type":"error","name":"UpgradeFailed","inputs":[]},{"type":"error","name":"WrongOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"expectedOwner","type":"bytes","internalType":"bytes"},{"name":"actualOwner","type":"bytes","internalType":"bytes"}]}],"bytecode":{"object":"0x60a06040818152346200040557306080526200001b8262000409565b6001918281525f5b602080821015620000405790606060209282850101520162000023565b5050828251906020915f838201528281526200005c8162000409565b620000678462000425565b52620000738362000425565b50807f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00928354945f935b620000c6575b505050505551612d339081620004f5823960805181818161075501526108780152f35b8096959694939451851015620003f95781620000e3868362000447565b5151141580620003e1575b620003b6578162000100868362000447565b5151148062000377575b6200034c576200011b858262000447565b5194875f1998898114620003385785019660ff6200013982620004ad565b541662000316576200014b81620004ad565b805460ff1916871790555f8281527f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f02865289902081516001600160401b038111620003025781549b888d811c9d168015620002f5575b888e1014620002e157601f808e116200029b575b899a9b9c9d50889083116001146200021d57928262000206938b989796935f8051602062003228833981519152965f9262000211575b50828a1b9260031b1c19161790555b8c51918291826200047f565b0390a201936200009d565b85015191505f620001eb565b90601f19831691845f52895f20925f5b818110620002835750938b989796935f805160206200322883398151915296938a93836200020698106200026a575b505050811b019055620001fa565b8601519060f88460031b161c191690555f80806200025c565b8288015185558d9c90940193918b01918b016200022d565b835f52885f206005828501811c82019f8b8610620002d6575b8301901c019d8e5b8110620002ca5750620001b5565b5f81558a018e620002bc565b919f508f91620002b4565b634e487b7160e01b5f52602260045260245ffd5b607f899e169d50620001a1565b634e487b7160e01b5f52604160045260245ffd5b885163468b12ad60e11b81529081906200033490600483016200047f565b0390fd5b634e487b7160e01b5f52601160045260245ffd5b856200035d86620003349362000447565b51905163bff1ac6560e01b8152918291600483016200047f565b5062000384858262000447565b5182815191015190838110620003a5575b506001600160a01b03106200010a565b5f1990840360031b1b168862000395565b85620003c786620003349362000447565b5190516327755b9160e11b8152918291600483016200047f565b5085620003ef868362000447565b51511415620000ee565b839450959495620000a3565b5f80fd5b604081019081106001600160401b038211176200030257604052565b805115620004335760200190565b634e487b7160e01b5f52603260045260245ffd5b8051821015620004335760209160051b010190565b5f5b8381106200046e5750505f910152565b81810151838201526020016200045e565b60409160208252620004a181518092816020860152602086860191016200045c565b601f01601f1916010190565b6020620004c89181604051938285809451938492016200045c565b81017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f038152030190209056fe6080604052600436101561001e575b361561001c5761001c611307565b005b5f3560e01c8063066a1eb7146101cd5780630db02622146101c85780630f0f3f24146101c35780631626ba7e146101be5780631ca5393f146101b957806329565e3b146101b45780632c2abd1e146101af57806334fcd5be146101aa57806336d9cf9b146101a55780633a871cdd146101a05780634f1ef2861461019b5780634f6e7f221461019657806352d1902d146101915780635c60da1b1461018c5780636f2de70e1461018757806384b0196e1461018257806388ce4c7c1461017d57806389625b57146101785780638ea69029146101735780639f9bcb341461016e578063a2e1a8d814610169578063b0d691fe14610164578063b61d27f61461015f578063b81973671461015a578063ce1506be14610155578063d948fd2e146101505763f698da250361000e57610cfc565b610cd3565b610cb5565b610c6a565b610bf3565b610bc5565b610b9e565b610b64565b610b31565b610adf565b610a90565b6109f1565b61090d565b6108c6565b610865565b61082b565b610719565b61068f565b610657565b6105c1565b610512565b610486565b61044f565b6102f5565b610260565b61022d565b3461022957604036600319011261022957602060ff61021d6040516102188161020a60243560043588840160209093929193604081019481520152565b03601f1981018352826103b0565b610d2d565b54166040519015158152f35b5f80fd5b34610229575f366003190112610229576020610247610da6565b604051908152f35b6001600160a01b0381160361022957565b346102295760203660031901126102295761001c6004356102808161024f565b610288611333565b6040519060018060a01b03166020820152602081526102a68161035a565b5f80516020612cde833981519152908154916102c183610dd0565b90556113ba565b9181601f84011215610229578235916001600160401b038311610229576020838186019501011161022957565b34610229576040366003190112610229576024356001600160401b0381116102295761033361032a60209236906004016102c8565b90600435610dde565b6040516001600160e01b03199091168152f35b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761037557604052565b610346565b60c081019081106001600160401b0382111761037557604052565b606081019081106001600160401b0382111761037557604052565b90601f801991011681019081106001600160401b0382111761037557604052565b604051906103de8261037a565b565b6001600160401b03811161037557601f01601f191660200190565b929192610407826103e0565b9161041560405193846103b0565b829481845281830111610229578281602093845f960137010152565b9080601f830112156102295781602061044c933591016103fb565b90565b34610229576020366003190112610229576004356001600160401b0381116102295760ff61021d6102186020933690600401610431565b346102295760403660031901126102295761049f611333565b6040805160043560208201526024359181019190915261001c906102a6816060810161020a565b906020600319830112610229576004356001600160401b039283821161022957806023830112156102295781600401359384116102295760248460051b83010111610229576024019190565b61051b366104c6565b90735ff137d4b0fdcd49dca30c7cf57e578a026d278933036105b0575f5b82811061054257005b6105518160051b830183610e20565b61055b8183610e52565b610564816111f5565b15610588575061057c600193926105829236916103fb565b306117e3565b01610539565b604051631d8370a360e11b81526001600160e01b0319919091166004820152602490fd5b0390fd5b6040516282b42960e81b8152600490fd5b6105ca366104c6565b90735ff137d4b0fdcd49dca30c7cf57e578a026d2789330361064a575b5f5b8281106105f257005b806106446106036001938686610e7e565b3561060d8161024f565b602061061a848888610e7e565b013561063e61063761062d868a8a610e7e565b6040810190610e20565b36916103fb565b9161180a565b016105e9565b610652611333565b6105e7565b34610229575f3660031901126102295760205f80516020612c9e83398151915254604051908152f35b90816101609103126102295790565b34610229576060366003190112610229576004356001600160401b038111610229576106bf903690600401610680565b604435735ff137d4b0fdcd49dca30c7cf57e578a026d278933036105b057806106ee6107059360243590610ea5565b91610709575b506040519081529081906020820190565b0390f35b5f9081803892335af1505f6106f4565b6040366003190112610229576004356107318161024f565b6024356001600160401b038111610229576107509036906004016102c8565b9091307f00000000000000000000000000000000000000000000000000000000000000001461081e57610781611333565b60018060a01b03166352d1902d6001527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80602060016004601d865afa510361081057818391817fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2556107f357005b815f926040519485378338925af41561080857005b3d5f823e3d90fd5b6355299b496001526004601dfd5b639f03a0265f526004601cfd5b34610229576020366003190112610229576004356001600160401b038111610229576102476108606020923690600401610680565b610f4b565b34610229575f36600319011261022957307f00000000000000000000000000000000000000000000000000000000000000000361081e5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b34610229575f366003190112610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546040516001600160a01b039091168152602090f35b610916366104c6565b5f80516020612cde83398151915254610999576001600160401b03808211610375578160051b926020936040519361095160208301866103b0565b845260208401908201923684116102295782915b8483106109755761001c86611834565b823582811161022957879161098e839236908801610431565b815201920191610965565b6040516302ed543d60e51b8152600490fd5b5f5b8381106109bc5750505f910152565b81810151838201526020016109ad565b906020916109e5815180928185528580860191016109ab565b601f01601f1916010190565b34610229575f36600319011261022957610a3f610a0c611942565b90604051928392600f60f81b8452610a3160209360e0602087015260e08601906109cc565b9084820360408601526109cc565b904660608401523060808401525f60a084015282820360c084015260206060519283815201916080915f5b828110610a7957505050500390f35b835185528695509381019392810192600101610a6a565b34610229575f3660031901126102295760206040516121058152f35b9060406003198301126102295760043591602435906001600160401b03821161022957610adb916004016102c8565b9091565b3461022957610aed36610aac565b90610af6611333565b6001610b00610da6565b14610b0e5761001c92611a83565b60405163948bf89760e01b8152600490fd5b90602061044c9281815201906109cc565b3461022957602036600319011261022957610705610b50600435611141565b6040519182916020835260208301906109cc565b34610229576020366003190112610229576004356001600160e01b03198116810361022957610b946020916111f5565b6040519015158152f35b34610229576020366003190112610229576020610b94600435610bc08161024f565b611277565b34610229575f366003190112610229576020604051735ff137d4b0fdcd49dca30c7cf57e578a026d27898152f35b606036600319011261022957600435610c0b8161024f565b604435906001600160401b03821161022957610c53610c3161001c9336906004016102c8565b735ff137d4b0fdcd49dca30c7cf57e578a026d27893303610c5d5736916103fb565b906024359061180a565b610c65611333565b610637565b3461022957610c7836610aac565b90610c81611333565b610c89610da6565b9260018411610c9c5761001c9350611a83565b604051631047e35560e31b815260048101859052602490fd5b34610229576020366003190112610229576020610247600435611ba3565b34610229575f3660031901126102295760205f80516020612cde83398151915254604051908152f35b34610229575f3660031901126102295760206102476112a0565b90610d29602092828151948592016109ab565b0190565b6020610d469181604051938285809451938492016109ab565b81017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b634e487b7160e01b5f52601160045260245ffd5b905f80516020612c5e833981519152918203918211610da157565b610d72565b5f80516020612cde833981519152545f80516020612c9e833981519152548103908111610da15790565b5f198114610da15760010190565b90610dec610df19392611ba3565b6116b8565b610e01576001600160e01b031990565b630b135d3f60e11b90565b634e487b7160e01b5f52603260045260245ffd5b903590601e198136030182121561022957018035906001600160401b0382116102295760200191813603831361022957565b6001600160e01b03199035818116939260048110610e6f57505050565b60040360031b82901b16169150565b9190811015610ea05760051b81013590605e1981360301821215610229570190565b610e0c565b602081013560401c91610ebb6060830183610e20565b6316155e8f60e11b916001600160e01b031991610ed791610e52565b1603610f335750610ee781610f4b565b916121058103610f19575090610f06610f0c925b610140810190610e20565b916116b8565b610f1557600190565b5f90565b604051632ef3781360e01b81526004810191909152602490fd5b916121058114610f19575090610f06610f0c92610efb565b610f61610f5b6040830183610e20565b906121ad565b90610f72610f5b6060830183610e20565b90611008610f87610f5b610120840184610e20565b6040805184356001600160a01b031660208083019182528601359282019290925260608101969096526080808701959095529383013560a08087019190915283013560c08087019190915283013560e08087019190915283013561010080870191909152909201356101208501526101408401919091528290610160820190565b039161101c601f19938481018352826103b0565b5190209061106360405191826110576020820195866020735ff137d4b0fdcd49dca30c7cf57e578a026d278991939293604081019481520152565b039081018352826103b0565b51902090565b90600182811c92168015611097575b602083101461108357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611078565b9060405191825f82546110b381611069565b908184526020946001916001811690815f1461111f57506001146110e1575b5050506103de925003836103b0565b5f90815285812095935091905b8183106111075750506103de93508201015f80806110d2565b855488840185015294850194879450918301916110ee565b925050506103de94925060ff191682840152151560051b8201015f80806110d2565b5f5260205f80516020612c7e833981519152815260405f209060405180925f90805461116c81611069565b808552916001918083169081156111d35750600114611195575b50505061044c925003826103b0565b5f90815285812095935091905b8183106111bb57505061044c93508201015f8080611186565b855487840185015294850194869450918301916111a2565b9250505061044c94925060ff191682840152151560051b8201015f8080611186565b63ffffffff60e01b166329565e3b60e01b8114908115611266575b8115611255575b8115611244575b8115611233575b5061122e575f90565b600190565b63278f794360e11b1490505f611225565b63b819736760e01b8114915061121e565b6389625b5760e01b81149150611217565b6303c3cfc960e21b81149150611210565b61129b60ff916040519060018060a01b03166020820152602081526102188161035a565b541690565b6112a8611942565b906020815191012090602081519101206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526110638161037a565b5f3560e01c63bc197c81811463f23a6e6182141763150b7a0282141761132a5750565b6020526020603cf35b61133c33611277565b8015611358575b6103de576040516282b42960e81b8152600490fd5b50303314611343565b81811061136c575050565b5f8155600101611361565b9190601f811161138657505050565b6103de925f5260205f20906020601f840160051c830193106113b0575b601f0160051c0190611361565b90915081906113a3565b60ff6113c582610d2d565b5416611529576113d481610d2d565b600190600160ff19825416179055825f526020905f80516020612c7e83398151915260205260405f20918351916001600160401b038311610375576114238361141d8654611069565b86611377565b602091601f841160011461149857505091611479827f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209593611488955f9161148d575b508160011b915f199060031b1c19161790565b90555b60405191829182610b20565b0390a2565b90508401515f611466565b9190601f198416906114ad865f5260205f2090565b935f915b83831061151257505050926114889492600192827f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209896106114fa575b5050811b01905561147c565b8501515f1960f88460031b161c191690555f806114ee565b8885015186559485019493810193918101916114b1565b60405163468b12ad60e11b8152602060048201529081906105ac9060248301906109cc565b906020828203126102295781356001600160401b03928382116102295701906040828203126102295760405192604084018481108282111761037557604052823584526020830135908111610229576115a79201610431565b602082015290565b6020815191015190602081106115c3575090565b5f199060200360031b1b1690565b9190826040910312610229576020825192015190565b81601f820112156102295780516115fd816103e0565b9261160b60405194856103b0565b818452602082840101116102295761044c91602080850191016109ab565b906020828203126102295781516001600160401b0392838211610229570160c081830312610229576116596103d1565b928151818111610229578361166f9184016115e7565b845260208201519081116102295760a09261168b9183016115e7565b6020840152604081015160408401526060810151606084015260808101516080840152015160a082015290565b91906116c69181019061154e565b906116d18251611141565b916020918284511461174b57835160408114611702576040516327755b9160e11b8152806105ac8760048301610b20565b9061174661173161171e878780809761044c9b010191016115d1565b9690950151848082518301019101611629565b6040519384019283529291829060200161020a565b611ddb565b92939290916001600160a01b03611761866115af565b11611777578061044c9495015192015191611c2a565b60405163bff1ac6560e01b8152806105ac8760048301610b20565b60405190602082018281106001600160401b03821117610375576040525f8252565b3d156117de573d906117c5826103e0565b916117d360405193846103b0565b82523d5f602084013e565b606090565b5f91829182602083519301915af16117f96117b4565b90156118025750565b602081519101fd5b915f928392602083519301915af16117f96117b4565b8051821015610ea05760209160051b010190565b905f80516020612cde833981519152545f5b835181101561192e5760208061185c8387611820565b5151141580611918575b6118f1576118748286611820565b515114806118cf575b6118a857806118a261189160019387611820565b519361189c81610dd0565b946113ba565b01611846565b6118b56105ac9185611820565b5160405163bff1ac6560e01b815291829160048301610b20565b506001600160a01b036118eb6118e58387611820565b516115af565b1161187d565b6105ac6118fe8387611820565b516040516327755b9160e11b815291829160048301610b20565b5060406119258387611820565b51511415611866565b505f80516020612cde833981519152559050565b60405161194e8161035a565b601581527410dbda5b98985cd94814db585c9d0815d85b1b195d605a1b60208201529060405161197d8161035a565b60018152603160f81b602082015290565b908060209392818452848401375f828201840152601f01601f1916010190565b929161044c94926119cc92855260606020860152606085019161198e565b9160408184039101526109cc565b60209082604051938492833781017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b600281901b91906001600160fe1b03811603610da157565b611a348154611069565b9081611a3e575050565b81601f5f9311600114611a4f575055565b908083918252611a6e601f60208420940160051c840160018501611361565b5555565b91602061044c93818152019161198e565b9190611aab611aa6845f525f80516020612c7e83398151915260205260405f2090565b6110a1565b805115611b8a5780516020820120611ac43685856103fb565b6020815191012003611b6b57509081611b0b611b01837fcf95bbfe6f870f8cc40482dc3dccdafd268f0e9ce0a4f24ea1bea9be64e505ff956119da565b805460ff19169055565b611b31611b2c855f525f80516020612c7e83398151915260205260405f2090565b611a2a565b611b5c611b4b5f80516020612c9e83398151915254610dd0565b5f80516020612c9e83398151915255565b61148860405192839283611a72565b60405163781f2e3960e01b81529384936105ac939091600486016119ae565b60405163340c473d60e11b815260048101859052602490fd5b611bab6112a0565b9060405160208101917f9b493d222105fee7df163ab5d57f0bf1ffd2da04dd5fafbe10b54c41c1adc6578352604082015260408152611be981610395565b51902060405190602082019261190160f01b84526022830152604282015260428152608081018181106001600160401b038211176103755760405251902090565b5f9392906001600160a01b031680611c4157505050565b90919293506040805191845f5260209283850151835282855114611ce3575b6041855114611ca9575b5f606052808352630b135d3f60e11b9485825260049687830152602482019687948552815186019081604493848601925afa503d01915afa9151141690565b6060808601515f1a85528386015181526001858160805f825afa5184183d151715611cd5575050611c6a565b5f9091529252509392505050565b8483015160ff81901c601b0185526001600160ff1b031660609081526001858160805f825afa5184183d151715611cd5575050611c60565b9060158201809211610da157565b9060028201809211610da157565b91908201809211610da157565b906103de602e60405180946c1131b430b63632b733b2911d1160991b6020830152611d79815180926020602d860191016109ab565b8101601160f91b602d82015203600e8101855201836103b0565b805160201015610ea05760400190565b6040513d5f823e3d90fd5b6020929190611dc48492828151948592016109ab565b019081520190565b90816020910312610229575190565b92919060a081017f7fffffff800000007fffffffffffffffde737d56d38bcf4279dce5617e3192a8815111611fd757602094858301907fff1a2a9176d650e4a99dedb58f1793003935130579fe17b5a3f698ac5b00e634611e4b83516060870151611e4581611d1b565b91611fe0565b88815191012003611fcc57611e6b611e7091611e65612062565b906121ea565b611d44565b611e8582516040860151611e45845182611d37565b8781519101209087815191012003611fc257600160f81b80611eb8611eaa8651611d93565b516001600160f81b03191690565b1603611fc2575f611ed187925160405191828092610d16565b039060025afa15611fbd575f51855f611f168551611ef6604051958692868401611dae565b0393611f0a601f19958681018352826103b0565b60405191828092610d16565b039060025afa15611fbd575f8060809481519586910193611f698551918b6110578c8c8b516040519788958601998a9192608093969594919660a084019784526020840152604083015260608201520152565b51906101005afa95611f796117b4565b9081519780611fb4575b611f9757505061044c9550519051916120c1565b600197611fb09750820181019550019250611dcc915050565b1490565b50871515611f83565b611da3565b5050505050505f90565b505050505050505f90565b50505050505f90565b80516060949392908381111561205a575b81811115612052575b5082811061200757505050565b60405192819003808452929450601f19929183910181601f840181165b80830151818901520190811561203c57908290612024565b50505f8583016020015250603f01168201604052565b90505f611ffa565b925082611ff1565b6040519061206f82610395565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b939190929383158015612196575b801561218e575b8015612177575b611fd7576120eb8386612291565b15611fd75760405191602083526020808401526020604084015260608301527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f60808301525f80516020612c5e833981519152948560a084015260208360c08160055f19fa1561022957612171938661216b945181818909940991612331565b91610d86565b90081590565b505f80516020612c5e8339815191528210156120dd565b5081156120d6565b505f80516020612c5e8339815191528410156120cf565b816040519182372090565b906121c2826103e0565b6121cf60405191826103b0565b82815280926121e0601f19916103e0565b0190602036910137565b805115612287576122156122106122096122048451611a12565b611d29565b6003900490565b6121b8565b916020830191808051019060208201928351945f85525b83831061223b57505050505290565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530161222c565b505061044c611792565b600160601b63ffffffff60c01b031990818110801590612327575b8015612316575b61230f577f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b828281807fffffffff00000001000000000000000000000000fffffffffffffffffffffffc81960991818180090908089180091490565b5050505f90565b50801580156122b3575082156122b3565b50818310156122ac565b5f9260ff92909184831580612a23575b611fcc5761234f8383612a2b565b9095861580612a1b575b6129e0575b85811c60028a60fe1c16015b156129c757600186821c1660028a831c60011b16016001811461298f575b60028114612982575b600314612975575b5f9493929419019560019860015b885f19116124115750505050505050505060405191606083015260208252602080830152602060408301525f80516020612cbe8339815191526080830152600163ffffffff60601b0360601b19918260a082015260208160c08160055f19fa156102295751900990565b600163ffffffff60601b0360609a95969798999a1b198860020994600160601b63ffffffff60c01b0319868009600160601b63ffffffff60c01b031981830996600160601b63ffffffff60c01b03199082900991600160601b63ffffffff60c01b03199081908f8281830891600160601b63ffffffff60c01b031991820390080960030992600160601b63ffffffff60c01b03199083099c600160601b63ffffffff60c01b0319910995600160601b63ffffffff60c01b031980825f80516020612cbe83398151915209600160601b63ffffffff60c01b03198580090892600160601b63ffffffff60c01b031991829081038508900998600160601b63ffffffff60c01b0319908a908290840908988a8c1c600116848d1c60011b60021601156129575760018c600286838f841c16921c831b160114612921575b838c8c6002600182841c168185851c60011b16011461290e575b6003926001600292841c16921c60011b160114612905575b86156128f257600160601b63ffffffff60c01b0319908a9082908f90090890600160601b63ffffffff60c01b031990838203908290899009089581156126e7575b600160601b63ffffffff60c01b0319908188800990099b600160601b63ffffffff60c01b03199081888181800909900998600160601b63ffffffff60c01b0319908190818981818009099009600160601b63ffffffff60c01b03198381808080808e80098a095f80516020612cbe83398151915209600160601b63ffffffff60c01b0319808e8181800909600160601b63ffffffff60c01b0319908103908680090808600160601b63ffffffff60c01b031990810390808d8009890908090895600160601b63ffffffff60c01b031992839081908184800990095f80516020612cbe8339815191520991600160601b63ffffffff60c01b03199182908181800909600160601b63ffffffff60c01b03199081039180090808985b5f19019796939594936123a7565b866125bf57919a9198919550600160601b63ffffffff60c01b031990508080835f80516020612cbe83398151915209600160601b63ffffffff60c01b0319845f80516020612cbe83398151915209098b0999600160601b63ffffffff60c01b031990818a8103820890600160601b63ffffffff60c01b0319908b9008099a600160601b63ffffffff60c01b031990818080855f80516020612cbe83398151915209600160601b63ffffffff60c01b0319865f80516020612cbe8339815191520909600160601b63ffffffff60c01b0319855f80516020612cbe83398151915209090997600160601b63ffffffff60c01b0319908180845f80516020612cbe83398151915209600160601b63ffffffff60c01b0319855f80516020612cbe8339815191520909099a600160601b63ffffffff60c01b0319808c5f80516020612cbe83398151915209600160601b63ffffffff60c01b03198084600309600160601b63ffffffff60c01b03198560030909089a600160601b63ffffffff60c01b0319928390818080835f80516020612cbe83398151915209600160601b63ffffffff60c01b0319845f80516020612cbe8339815191520909600160601b63ffffffff60c01b0319835f80516020612cbe83398151915209090991600160601b63ffffffff60c01b03199182908e8203900890600160601b63ffffffff60c01b0319906003090908936126d9565b60019c50909a8c995090955090506126d9565b5050828461257e565b508993508a92508591508d90508c612566565b50505f80516020612c3e8339815191527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f561254c565b50949a90999097600160601b63ffffffff60c01b03190394506126d9565b9150955084958091612399565b9397508793859350612391565b5f80516020612c3e83398151915298507f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f59350612388565b5f1901600160028188841c16918b841c901b160161236a565b9790945f80516020612c5e8339815191529182039008935f97851580612a13575b1561235e575050505050505050505f90565b506001612a01565b508115612359565b508615612341565b7f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592915f80516020612c3e833981519152918115612b7f5780831480612b76575b15612b5f5750600160601b63ffffffff60c01b03199190508184600209918083800992818080808781818909950995817fffffffff00000001000000000000000000000000fffffffffffffffffffffffe816001840892080960030981808080865f80516020612cbe8339815191520981858009089981600181818b099a099709810393898203900890090893915b60405190602082526020808301526020604083015260608201525f80516020612cbe8339815191526080820152600163ffffffff60601b0360601b19928360a083015260208260c08160055f19fa1561022957838080935180950980099009930990565b909150612b6d929350612b85565b91939291612afb565b50818514612a6c565b50509190565b60019283927f94e82e0c1ed3bdb90743191a9c5bbf0d88fc827fd214cc5f0b5ec6ba27673d69600163ffffffff60601b0360601b198095818094817fb01cbd1c01e58065711814b583f061e9d431cca994cea1313449bf97c840ae0a9a8b9209089509089280808080878009968709948180885f80516020612c3e8339815191520991818080855f80516020612cbe83398151915209818b810381868009080893818a869d099482039008090894600109926001099056fe6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255197e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0297e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01ffffffff00000001000000000000000000000000fffffffffffffffffffffffd97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00a2646970667358221220f577f60b9ed503b945bb7026a4129b406b572e177e5955fe985135ecd7cf60cb64736f6c6343000817003338109edc26e166b5579352ce56a50813177eb25208fd90d61f2f378386220220","sourceMap":"940:13565:48:-:0;;;;;;;;1520:4:44;1496:31;;940:13565:48;;;:::i;:::-;4785:1;940:13565;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;4809:22;-1:-1:-1;4809:22:48;;;940:13565;4809:22;;;;;;:::i;:::-;4797:34;;;:::i;:::-;;;;;:::i;:::-;;11499:89:50;;940:13565:48;;;8902:9:50;-1:-1:-1;8897:424:50;4785:1:48;;;8897:424:50;940:13565:48;;;;;;;;;;;;1496:31:44;940:13565:48;;;;;;;;;;;8932:3:50;940:13565:48;;;;;;;;8913:17:50;;;;;8955:9;;;;;:::i;:::-;;940:13565:48;8955:22:50;;:48;;;8932:3;8951:128;;9097:9;;;;;:::i;:::-;;940:13565:48;9097:22:50;:73;;;8932:3;9093:157;;9281:9;;;;:::i;:::-;;9292:17;;940:13565:48;;;;;;;;;;;;;;;:::i;:::-;;;9698:51:50;;940:13565:48;;;:::i;:::-;;;-1:-1:-1;;940:13565:48;;;;;-1:-1:-1;940:13565:48;;;9860:14:50;940:13565:48;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;;;8932:3:50;940:13565:48;;;;;;;;;;;;8932:3:50;940:13565:48;;;;;;;;;;;;;;;;9905:22:50;940:13565:48;;;;;;-1:-1:-1;;;;;;;;;;;940:13565:48;-1:-1:-1;940:13565:48;;;;;;;;;7054:33:50;940:13565:48;;;;;;;;;;9905:22:50;;;;;:::i;:::-;;;;940:13565:48;8902:9:50;;;940:13565:48;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;-1:-1:-1;940:13565:48;;-1:-1:-1;940:13565:48;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;9905:22:50;940:13565:48;;;;;;;;;;;;;;;;;;;;;;7054:33:50;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;-1:-1:-1;940:13565:48;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;-1:-1:-1;940:13565:48;9698:51:50;940:13565:48;;-1:-1:-1;;;9730:19:50;;940:13565:48;;;9730:19:50;;;;;;:::i;:::-;;;;940:13565:48;;;;-1:-1:-1;940:13565:48;;;;;-1:-1:-1;940:13565:48;9093:157:50;9225:9;;;9197:38;9225:9;;:::i;:::-;;940:13565:48;;-1:-1:-1;;;9197:38:50;;940:13565:48;;;9197:38:50;;;;:::i;9097:73::-;9139:9;;;;;:::i;:::-;;940:13565:48;;;;;;;;;;;;9097:73:50;-1:-1:-1;;;;;;;9097:73:50;;940:13565:48;-1:-1:-1;;940:13565:48;;;7054:33:50;940:13565:48;;;;;;8951:128:50;9054:9;;;9030:34;9054:9;;:::i;:::-;;940:13565:48;;-1:-1:-1;;;9030:34:50;;940:13565:48;;;9030:34:50;;;;:::i;8955:48::-;8981:9;;;;;;:::i;:::-;;940:13565:48;8981:22:50;;8955:48;;8913:17;;;;;;;;;940:13565:48;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;7054:33:50;940:13565:48;;;;;;;:::o","linkReferences":{}},"deployedBytecode":{"object":"0x6080604052600436101561001e575b361561001c5761001c611307565b005b5f3560e01c8063066a1eb7146101cd5780630db02622146101c85780630f0f3f24146101c35780631626ba7e146101be5780631ca5393f146101b957806329565e3b146101b45780632c2abd1e146101af57806334fcd5be146101aa57806336d9cf9b146101a55780633a871cdd146101a05780634f1ef2861461019b5780634f6e7f221461019657806352d1902d146101915780635c60da1b1461018c5780636f2de70e1461018757806384b0196e1461018257806388ce4c7c1461017d57806389625b57146101785780638ea69029146101735780639f9bcb341461016e578063a2e1a8d814610169578063b0d691fe14610164578063b61d27f61461015f578063b81973671461015a578063ce1506be14610155578063d948fd2e146101505763f698da250361000e57610cfc565b610cd3565b610cb5565b610c6a565b610bf3565b610bc5565b610b9e565b610b64565b610b31565b610adf565b610a90565b6109f1565b61090d565b6108c6565b610865565b61082b565b610719565b61068f565b610657565b6105c1565b610512565b610486565b61044f565b6102f5565b610260565b61022d565b3461022957604036600319011261022957602060ff61021d6040516102188161020a60243560043588840160209093929193604081019481520152565b03601f1981018352826103b0565b610d2d565b54166040519015158152f35b5f80fd5b34610229575f366003190112610229576020610247610da6565b604051908152f35b6001600160a01b0381160361022957565b346102295760203660031901126102295761001c6004356102808161024f565b610288611333565b6040519060018060a01b03166020820152602081526102a68161035a565b5f80516020612cde833981519152908154916102c183610dd0565b90556113ba565b9181601f84011215610229578235916001600160401b038311610229576020838186019501011161022957565b34610229576040366003190112610229576024356001600160401b0381116102295761033361032a60209236906004016102c8565b90600435610dde565b6040516001600160e01b03199091168152f35b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b0382111761037557604052565b610346565b60c081019081106001600160401b0382111761037557604052565b606081019081106001600160401b0382111761037557604052565b90601f801991011681019081106001600160401b0382111761037557604052565b604051906103de8261037a565b565b6001600160401b03811161037557601f01601f191660200190565b929192610407826103e0565b9161041560405193846103b0565b829481845281830111610229578281602093845f960137010152565b9080601f830112156102295781602061044c933591016103fb565b90565b34610229576020366003190112610229576004356001600160401b0381116102295760ff61021d6102186020933690600401610431565b346102295760403660031901126102295761049f611333565b6040805160043560208201526024359181019190915261001c906102a6816060810161020a565b906020600319830112610229576004356001600160401b039283821161022957806023830112156102295781600401359384116102295760248460051b83010111610229576024019190565b61051b366104c6565b90735ff137d4b0fdcd49dca30c7cf57e578a026d278933036105b0575f5b82811061054257005b6105518160051b830183610e20565b61055b8183610e52565b610564816111f5565b15610588575061057c600193926105829236916103fb565b306117e3565b01610539565b604051631d8370a360e11b81526001600160e01b0319919091166004820152602490fd5b0390fd5b6040516282b42960e81b8152600490fd5b6105ca366104c6565b90735ff137d4b0fdcd49dca30c7cf57e578a026d2789330361064a575b5f5b8281106105f257005b806106446106036001938686610e7e565b3561060d8161024f565b602061061a848888610e7e565b013561063e61063761062d868a8a610e7e565b6040810190610e20565b36916103fb565b9161180a565b016105e9565b610652611333565b6105e7565b34610229575f3660031901126102295760205f80516020612c9e83398151915254604051908152f35b90816101609103126102295790565b34610229576060366003190112610229576004356001600160401b038111610229576106bf903690600401610680565b604435735ff137d4b0fdcd49dca30c7cf57e578a026d278933036105b057806106ee6107059360243590610ea5565b91610709575b506040519081529081906020820190565b0390f35b5f9081803892335af1505f6106f4565b6040366003190112610229576004356107318161024f565b6024356001600160401b038111610229576107509036906004016102c8565b9091307f00000000000000000000000000000000000000000000000000000000000000001461081e57610781611333565b60018060a01b03166352d1902d6001527f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80602060016004601d865afa510361081057818391817fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2556107f357005b815f926040519485378338925af41561080857005b3d5f823e3d90fd5b6355299b496001526004601dfd5b639f03a0265f526004601cfd5b34610229576020366003190112610229576004356001600160401b038111610229576102476108606020923690600401610680565b610f4b565b34610229575f36600319011261022957307f00000000000000000000000000000000000000000000000000000000000000000361081e5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b34610229575f366003190112610229577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546040516001600160a01b039091168152602090f35b610916366104c6565b5f80516020612cde83398151915254610999576001600160401b03808211610375578160051b926020936040519361095160208301866103b0565b845260208401908201923684116102295782915b8483106109755761001c86611834565b823582811161022957879161098e839236908801610431565b815201920191610965565b6040516302ed543d60e51b8152600490fd5b5f5b8381106109bc5750505f910152565b81810151838201526020016109ad565b906020916109e5815180928185528580860191016109ab565b601f01601f1916010190565b34610229575f36600319011261022957610a3f610a0c611942565b90604051928392600f60f81b8452610a3160209360e0602087015260e08601906109cc565b9084820360408601526109cc565b904660608401523060808401525f60a084015282820360c084015260206060519283815201916080915f5b828110610a7957505050500390f35b835185528695509381019392810192600101610a6a565b34610229575f3660031901126102295760206040516121058152f35b9060406003198301126102295760043591602435906001600160401b03821161022957610adb916004016102c8565b9091565b3461022957610aed36610aac565b90610af6611333565b6001610b00610da6565b14610b0e5761001c92611a83565b60405163948bf89760e01b8152600490fd5b90602061044c9281815201906109cc565b3461022957602036600319011261022957610705610b50600435611141565b6040519182916020835260208301906109cc565b34610229576020366003190112610229576004356001600160e01b03198116810361022957610b946020916111f5565b6040519015158152f35b34610229576020366003190112610229576020610b94600435610bc08161024f565b611277565b34610229575f366003190112610229576020604051735ff137d4b0fdcd49dca30c7cf57e578a026d27898152f35b606036600319011261022957600435610c0b8161024f565b604435906001600160401b03821161022957610c53610c3161001c9336906004016102c8565b735ff137d4b0fdcd49dca30c7cf57e578a026d27893303610c5d5736916103fb565b906024359061180a565b610c65611333565b610637565b3461022957610c7836610aac565b90610c81611333565b610c89610da6565b9260018411610c9c5761001c9350611a83565b604051631047e35560e31b815260048101859052602490fd5b34610229576020366003190112610229576020610247600435611ba3565b34610229575f3660031901126102295760205f80516020612cde83398151915254604051908152f35b34610229575f3660031901126102295760206102476112a0565b90610d29602092828151948592016109ab565b0190565b6020610d469181604051938285809451938492016109ab565b81017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b634e487b7160e01b5f52601160045260245ffd5b905f80516020612c5e833981519152918203918211610da157565b610d72565b5f80516020612cde833981519152545f80516020612c9e833981519152548103908111610da15790565b5f198114610da15760010190565b90610dec610df19392611ba3565b6116b8565b610e01576001600160e01b031990565b630b135d3f60e11b90565b634e487b7160e01b5f52603260045260245ffd5b903590601e198136030182121561022957018035906001600160401b0382116102295760200191813603831361022957565b6001600160e01b03199035818116939260048110610e6f57505050565b60040360031b82901b16169150565b9190811015610ea05760051b81013590605e1981360301821215610229570190565b610e0c565b602081013560401c91610ebb6060830183610e20565b6316155e8f60e11b916001600160e01b031991610ed791610e52565b1603610f335750610ee781610f4b565b916121058103610f19575090610f06610f0c925b610140810190610e20565b916116b8565b610f1557600190565b5f90565b604051632ef3781360e01b81526004810191909152602490fd5b916121058114610f19575090610f06610f0c92610efb565b610f61610f5b6040830183610e20565b906121ad565b90610f72610f5b6060830183610e20565b90611008610f87610f5b610120840184610e20565b6040805184356001600160a01b031660208083019182528601359282019290925260608101969096526080808701959095529383013560a08087019190915283013560c08087019190915283013560e08087019190915283013561010080870191909152909201356101208501526101408401919091528290610160820190565b039161101c601f19938481018352826103b0565b5190209061106360405191826110576020820195866020735ff137d4b0fdcd49dca30c7cf57e578a026d278991939293604081019481520152565b039081018352826103b0565b51902090565b90600182811c92168015611097575b602083101461108357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611078565b9060405191825f82546110b381611069565b908184526020946001916001811690815f1461111f57506001146110e1575b5050506103de925003836103b0565b5f90815285812095935091905b8183106111075750506103de93508201015f80806110d2565b855488840185015294850194879450918301916110ee565b925050506103de94925060ff191682840152151560051b8201015f80806110d2565b5f5260205f80516020612c7e833981519152815260405f209060405180925f90805461116c81611069565b808552916001918083169081156111d35750600114611195575b50505061044c925003826103b0565b5f90815285812095935091905b8183106111bb57505061044c93508201015f8080611186565b855487840185015294850194869450918301916111a2565b9250505061044c94925060ff191682840152151560051b8201015f8080611186565b63ffffffff60e01b166329565e3b60e01b8114908115611266575b8115611255575b8115611244575b8115611233575b5061122e575f90565b600190565b63278f794360e11b1490505f611225565b63b819736760e01b8114915061121e565b6389625b5760e01b81149150611217565b6303c3cfc960e21b81149150611210565b61129b60ff916040519060018060a01b03166020820152602081526102188161035a565b541690565b6112a8611942565b906020815191012090602081519101206040519060208201927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8452604083015260608201524660808201523060a082015260a081526110638161037a565b5f3560e01c63bc197c81811463f23a6e6182141763150b7a0282141761132a5750565b6020526020603cf35b61133c33611277565b8015611358575b6103de576040516282b42960e81b8152600490fd5b50303314611343565b81811061136c575050565b5f8155600101611361565b9190601f811161138657505050565b6103de925f5260205f20906020601f840160051c830193106113b0575b601f0160051c0190611361565b90915081906113a3565b60ff6113c582610d2d565b5416611529576113d481610d2d565b600190600160ff19825416179055825f526020905f80516020612c7e83398151915260205260405f20918351916001600160401b038311610375576114238361141d8654611069565b86611377565b602091601f841160011461149857505091611479827f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209593611488955f9161148d575b508160011b915f199060031b1c19161790565b90555b60405191829182610b20565b0390a2565b90508401515f611466565b9190601f198416906114ad865f5260205f2090565b935f915b83831061151257505050926114889492600192827f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209896106114fa575b5050811b01905561147c565b8501515f1960f88460031b161c191690555f806114ee565b8885015186559485019493810193918101916114b1565b60405163468b12ad60e11b8152602060048201529081906105ac9060248301906109cc565b906020828203126102295781356001600160401b03928382116102295701906040828203126102295760405192604084018481108282111761037557604052823584526020830135908111610229576115a79201610431565b602082015290565b6020815191015190602081106115c3575090565b5f199060200360031b1b1690565b9190826040910312610229576020825192015190565b81601f820112156102295780516115fd816103e0565b9261160b60405194856103b0565b818452602082840101116102295761044c91602080850191016109ab565b906020828203126102295781516001600160401b0392838211610229570160c081830312610229576116596103d1565b928151818111610229578361166f9184016115e7565b845260208201519081116102295760a09261168b9183016115e7565b6020840152604081015160408401526060810151606084015260808101516080840152015160a082015290565b91906116c69181019061154e565b906116d18251611141565b916020918284511461174b57835160408114611702576040516327755b9160e11b8152806105ac8760048301610b20565b9061174661173161171e878780809761044c9b010191016115d1565b9690950151848082518301019101611629565b6040519384019283529291829060200161020a565b611ddb565b92939290916001600160a01b03611761866115af565b11611777578061044c9495015192015191611c2a565b60405163bff1ac6560e01b8152806105ac8760048301610b20565b60405190602082018281106001600160401b03821117610375576040525f8252565b3d156117de573d906117c5826103e0565b916117d360405193846103b0565b82523d5f602084013e565b606090565b5f91829182602083519301915af16117f96117b4565b90156118025750565b602081519101fd5b915f928392602083519301915af16117f96117b4565b8051821015610ea05760209160051b010190565b905f80516020612cde833981519152545f5b835181101561192e5760208061185c8387611820565b5151141580611918575b6118f1576118748286611820565b515114806118cf575b6118a857806118a261189160019387611820565b519361189c81610dd0565b946113ba565b01611846565b6118b56105ac9185611820565b5160405163bff1ac6560e01b815291829160048301610b20565b506001600160a01b036118eb6118e58387611820565b516115af565b1161187d565b6105ac6118fe8387611820565b516040516327755b9160e11b815291829160048301610b20565b5060406119258387611820565b51511415611866565b505f80516020612cde833981519152559050565b60405161194e8161035a565b601581527410dbda5b98985cd94814db585c9d0815d85b1b195d605a1b60208201529060405161197d8161035a565b60018152603160f81b602082015290565b908060209392818452848401375f828201840152601f01601f1916010190565b929161044c94926119cc92855260606020860152606085019161198e565b9160408184039101526109cc565b60209082604051938492833781017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b600281901b91906001600160fe1b03811603610da157565b611a348154611069565b9081611a3e575050565b81601f5f9311600114611a4f575055565b908083918252611a6e601f60208420940160051c840160018501611361565b5555565b91602061044c93818152019161198e565b9190611aab611aa6845f525f80516020612c7e83398151915260205260405f2090565b6110a1565b805115611b8a5780516020820120611ac43685856103fb565b6020815191012003611b6b57509081611b0b611b01837fcf95bbfe6f870f8cc40482dc3dccdafd268f0e9ce0a4f24ea1bea9be64e505ff956119da565b805460ff19169055565b611b31611b2c855f525f80516020612c7e83398151915260205260405f2090565b611a2a565b611b5c611b4b5f80516020612c9e83398151915254610dd0565b5f80516020612c9e83398151915255565b61148860405192839283611a72565b60405163781f2e3960e01b81529384936105ac939091600486016119ae565b60405163340c473d60e11b815260048101859052602490fd5b611bab6112a0565b9060405160208101917f9b493d222105fee7df163ab5d57f0bf1ffd2da04dd5fafbe10b54c41c1adc6578352604082015260408152611be981610395565b51902060405190602082019261190160f01b84526022830152604282015260428152608081018181106001600160401b038211176103755760405251902090565b5f9392906001600160a01b031680611c4157505050565b90919293506040805191845f5260209283850151835282855114611ce3575b6041855114611ca9575b5f606052808352630b135d3f60e11b9485825260049687830152602482019687948552815186019081604493848601925afa503d01915afa9151141690565b6060808601515f1a85528386015181526001858160805f825afa5184183d151715611cd5575050611c6a565b5f9091529252509392505050565b8483015160ff81901c601b0185526001600160ff1b031660609081526001858160805f825afa5184183d151715611cd5575050611c60565b9060158201809211610da157565b9060028201809211610da157565b91908201809211610da157565b906103de602e60405180946c1131b430b63632b733b2911d1160991b6020830152611d79815180926020602d860191016109ab565b8101601160f91b602d82015203600e8101855201836103b0565b805160201015610ea05760400190565b6040513d5f823e3d90fd5b6020929190611dc48492828151948592016109ab565b019081520190565b90816020910312610229575190565b92919060a081017f7fffffff800000007fffffffffffffffde737d56d38bcf4279dce5617e3192a8815111611fd757602094858301907fff1a2a9176d650e4a99dedb58f1793003935130579fe17b5a3f698ac5b00e634611e4b83516060870151611e4581611d1b565b91611fe0565b88815191012003611fcc57611e6b611e7091611e65612062565b906121ea565b611d44565b611e8582516040860151611e45845182611d37565b8781519101209087815191012003611fc257600160f81b80611eb8611eaa8651611d93565b516001600160f81b03191690565b1603611fc2575f611ed187925160405191828092610d16565b039060025afa15611fbd575f51855f611f168551611ef6604051958692868401611dae565b0393611f0a601f19958681018352826103b0565b60405191828092610d16565b039060025afa15611fbd575f8060809481519586910193611f698551918b6110578c8c8b516040519788958601998a9192608093969594919660a084019784526020840152604083015260608201520152565b51906101005afa95611f796117b4565b9081519780611fb4575b611f9757505061044c9550519051916120c1565b600197611fb09750820181019550019250611dcc915050565b1490565b50871515611f83565b611da3565b5050505050505f90565b505050505050505f90565b50505050505f90565b80516060949392908381111561205a575b81811115612052575b5082811061200757505050565b60405192819003808452929450601f19929183910181601f840181165b80830151818901520190811561203c57908290612024565b50505f8583016020015250603f01168201604052565b90505f611ffa565b925082611ff1565b6040519061206f82610395565b604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b939190929383158015612196575b801561218e575b8015612177575b611fd7576120eb8386612291565b15611fd75760405191602083526020808401526020604084015260608301527fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63254f60808301525f80516020612c5e833981519152948560a084015260208360c08160055f19fa1561022957612171938661216b945181818909940991612331565b91610d86565b90081590565b505f80516020612c5e8339815191528210156120dd565b5081156120d6565b505f80516020612c5e8339815191528410156120cf565b816040519182372090565b906121c2826103e0565b6121cf60405191826103b0565b82815280926121e0601f19916103e0565b0190602036910137565b805115612287576122156122106122096122048451611a12565b611d29565b6003900490565b6121b8565b916020830191808051019060208201928351945f85525b83831061223b57505050505290565b6004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c168801015160028601531685010151908201530161222c565b505061044c611792565b600160601b63ffffffff60c01b031990818110801590612327575b8015612316575b61230f577f5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b828281807fffffffff00000001000000000000000000000000fffffffffffffffffffffffc81960991818180090908089180091490565b5050505f90565b50801580156122b3575082156122b3565b50818310156122ac565b5f9260ff92909184831580612a23575b611fcc5761234f8383612a2b565b9095861580612a1b575b6129e0575b85811c60028a60fe1c16015b156129c757600186821c1660028a831c60011b16016001811461298f575b60028114612982575b600314612975575b5f9493929419019560019860015b885f19116124115750505050505050505060405191606083015260208252602080830152602060408301525f80516020612cbe8339815191526080830152600163ffffffff60601b0360601b19918260a082015260208160c08160055f19fa156102295751900990565b600163ffffffff60601b0360609a95969798999a1b198860020994600160601b63ffffffff60c01b0319868009600160601b63ffffffff60c01b031981830996600160601b63ffffffff60c01b03199082900991600160601b63ffffffff60c01b03199081908f8281830891600160601b63ffffffff60c01b031991820390080960030992600160601b63ffffffff60c01b03199083099c600160601b63ffffffff60c01b0319910995600160601b63ffffffff60c01b031980825f80516020612cbe83398151915209600160601b63ffffffff60c01b03198580090892600160601b63ffffffff60c01b031991829081038508900998600160601b63ffffffff60c01b0319908a908290840908988a8c1c600116848d1c60011b60021601156129575760018c600286838f841c16921c831b160114612921575b838c8c6002600182841c168185851c60011b16011461290e575b6003926001600292841c16921c60011b160114612905575b86156128f257600160601b63ffffffff60c01b0319908a9082908f90090890600160601b63ffffffff60c01b031990838203908290899009089581156126e7575b600160601b63ffffffff60c01b0319908188800990099b600160601b63ffffffff60c01b03199081888181800909900998600160601b63ffffffff60c01b0319908190818981818009099009600160601b63ffffffff60c01b03198381808080808e80098a095f80516020612cbe83398151915209600160601b63ffffffff60c01b0319808e8181800909600160601b63ffffffff60c01b0319908103908680090808600160601b63ffffffff60c01b031990810390808d8009890908090895600160601b63ffffffff60c01b031992839081908184800990095f80516020612cbe8339815191520991600160601b63ffffffff60c01b03199182908181800909600160601b63ffffffff60c01b03199081039180090808985b5f19019796939594936123a7565b866125bf57919a9198919550600160601b63ffffffff60c01b031990508080835f80516020612cbe83398151915209600160601b63ffffffff60c01b0319845f80516020612cbe83398151915209098b0999600160601b63ffffffff60c01b031990818a8103820890600160601b63ffffffff60c01b0319908b9008099a600160601b63ffffffff60c01b031990818080855f80516020612cbe83398151915209600160601b63ffffffff60c01b0319865f80516020612cbe8339815191520909600160601b63ffffffff60c01b0319855f80516020612cbe83398151915209090997600160601b63ffffffff60c01b0319908180845f80516020612cbe83398151915209600160601b63ffffffff60c01b0319855f80516020612cbe8339815191520909099a600160601b63ffffffff60c01b0319808c5f80516020612cbe83398151915209600160601b63ffffffff60c01b03198084600309600160601b63ffffffff60c01b03198560030909089a600160601b63ffffffff60c01b0319928390818080835f80516020612cbe83398151915209600160601b63ffffffff60c01b0319845f80516020612cbe8339815191520909600160601b63ffffffff60c01b0319835f80516020612cbe83398151915209090991600160601b63ffffffff60c01b03199182908e8203900890600160601b63ffffffff60c01b0319906003090908936126d9565b60019c50909a8c995090955090506126d9565b5050828461257e565b508993508a92508591508d90508c612566565b50505f80516020612c3e8339815191527f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f561254c565b50949a90999097600160601b63ffffffff60c01b03190394506126d9565b9150955084958091612399565b9397508793859350612391565b5f80516020612c3e83398151915298507f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f59350612388565b5f1901600160028188841c16918b841c901b160161236a565b9790945f80516020612c5e8339815191529182039008935f97851580612a13575b1561235e575050505050505050505f90565b506001612a01565b508115612359565b508615612341565b7f4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f592915f80516020612c3e833981519152918115612b7f5780831480612b76575b15612b5f5750600160601b63ffffffff60c01b03199190508184600209918083800992818080808781818909950995817fffffffff00000001000000000000000000000000fffffffffffffffffffffffe816001840892080960030981808080865f80516020612cbe8339815191520981858009089981600181818b099a099709810393898203900890090893915b60405190602082526020808301526020604083015260608201525f80516020612cbe8339815191526080820152600163ffffffff60601b0360601b19928360a083015260208260c08160055f19fa1561022957838080935180950980099009930990565b909150612b6d929350612b85565b91939291612afb565b50818514612a6c565b50509190565b60019283927f94e82e0c1ed3bdb90743191a9c5bbf0d88fc827fd214cc5f0b5ec6ba27673d69600163ffffffff60601b0360601b198095818094817fb01cbd1c01e58065711814b583f061e9d431cca994cea1313449bf97c840ae0a9a8b9209089509089280808080878009968709948180885f80516020612c3e8339815191520991818080855f80516020612cbe83398151915209818b810381868009080893818a869d099482039008090894600109926001099056fe6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296ffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255197e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0297e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01ffffffff00000001000000000000000000000000fffffffffffffffffffffffd97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00a2646970667358221220f577f60b9ed503b945bb7026a4129b406b572e177e5955fe985135ecd7cf60cb64736f6c63430008170033","sourceMap":"940:13565:48:-:0;;;;;;;;;-1:-1:-1;940:13565:48;;;;608:55:41;;:::i;:::-;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;6691:16:50;940:13565:48;6691:16:50;940:13565:48;;;;6691:16:50;;;940:13565:48;;;;;;;;;;;;;;;6691:16:50;;;;;;;;;;:::i;:::-;940:13565:48;:::i;:::-;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;:::o;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;4202:42:50;940:13565:48;;;;;:::i;:::-;3914:70:50;;:::i;:::-;940:13565:48;;;;;;;;;;4183:17:50;;940:13565:48;;4183:17:50;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;940:13565:48;;;4202:42:50;;;;:::i;:::-;940:13565:48;;4202:42:50;:::i;940:13565:48:-;;;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;-1:-1:-1;;;;;;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;:::o;:::-;;;6691:16:50;;940:13565:48;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;940:13565:48;;;;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;3914:70:50;;:::i;:::-;940:13565:48;;;;;;4518:16:50;;940:13565:48;;;;;;;;;;4536:42:50;;4518:16;940:13565:48;;;;4518:16:50;940:13565:48;;;;-1:-1:-1;;940:13565:48;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;3309:10;9905:42;3309:10;:26;3305:78;;-1:-1:-1;8452:16:48;;;;;;940:13565;8470:3;940:13565;;;;;;;;:::i;:::-;8551:12;;;;:::i;:::-;8582:34;;;:::i;:::-;8581:35;8577:109;;940:13565;;;;;8700:29;940:13565;;;;:::i;:::-;8714:4;8700:29;:::i;:::-;940:13565;8441:9;;8577:109;940:13565;;-1:-1:-1;;;8643:28:48;;-1:-1:-1;;;;;;940:13565:48;;;;;8643:28;;940:13565;;;8643:28;;;;;3305:78;940:13565;;-1:-1:-1;;;3358:14:48;;940:13565;;3358:14;940:13565;;;;:::i;:::-;3562:10;9905:42;3562:10;:26;3558:70;;940:13565;-1:-1:-1;9596:16:48;;;;;;940:13565;9614:3;9639:8;9633:53;9639:8;940:13565;9639:8;;;;:::i;:::-;940:13565;;;;:::i;:::-;9656:14;:8;;;;;:::i;:::-;:14;940:13565;;9672:13;:8;;;;;:::i;:::-;:13;;;;;:::i;:::-;940:13565;;;:::i;:::-;9633:53;;:::i;:::-;940:13565;9585:9;;3558:70;;;:::i;:::-;;;940:13565;;;;;;-1:-1:-1;;940:13565:48;;;;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;:::i;:::-;;;9905:42;3309:10;:26;3305:78;;940:13565;6769:888;940:13565;;;;6769:888;;:::i;:::-;4329:275;;;940:13565;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;4329:275;-1:-1:-1;4329:275:48;;;;3309:10;;4329:275;;;;;;940:13565;;;-1:-1:-1;;940:13565:48;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;:::i;:::-;5766:446:44;;;5707:6;5766:446;;;3914:70:50;;:::i;:::-;940:13565:48;;;;;4254:1327:44;;;;;;940:13565:48;4254:1327:44;940:13565:48;4254:1327:44;;;;;;;;;;;;;-1:-1:-1;4254:1327:44;;;;;940:13565:48;4254:1327:44;;-1:-1:-1;4254:1327:44;940:13565:48;4254:1327:44;;;;;;;;;;;;940:13565:48;4254:1327:44;;-1:-1:-1;4254:1327:44;;;;;;;;;940:13565:48;4254:1327:44;;5766:446;;-1:-1:-1;5766:446:44;940:13565:48;5766:446:44;;940:13565:48;;;;;;-1:-1:-1;;940:13565:48;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;6461:184:44;6402:6;6461:184;;;940:13565:48;;;2614:66:44;940:13565:48;;;;;;;;;-1:-1:-1;;940:13565:48;;;;10749:73;;940:13565;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;940:13565:48;5350:72;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5432:25;;;:::i;940:13565::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5350:72;940:13565;;-1:-1:-1;;;5398:13:48;;940:13565;;5398:13;940:13565;;;;;;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;2485:23:49;;:::i;:::-;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2528:13:49;;940:13565:48;;;;2579:4:49;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;2386:4;940:13565;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;3914:70:50;;;:::i;:::-;5106:1;5090:12;;:::i;:::-;:17;5086:66;;5189:5;;;:::i;5086:66::-;940:13565:48;;-1:-1:-1;;;5130:11:50;;940:13565:48;;5130:11:50;940:13565:48;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;-1:-1:-1;;;;;;940:13565:48;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;940:13565:48;;;;;;;9905:42;940:13565;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;940:13565:48;;;;;;9229:26;940:13565;;;;;;:::i;:::-;9905:42;3562:10;:26;3558:70;;940:13565;;;:::i;:::-;;;;9229:26;;:::i;3558:70::-;;;:::i;:::-;;;940:13565;;;;;;;:::i;:::-;3914:70:50;;;:::i;:::-;5770:12;;:::i;:::-;5796:19;5814:1;5796:19;;5792:86;;5915:5;;;;:::i;5792:86::-;940:13565:48;;-1:-1:-1;;;5838:29:50;;940:13565:48;5838:29:50;;940:13565:48;;;;;5838:29:50;940:13565:48;;;;;;-1:-1:-1;;940:13565:48;;;;;4229:17:49;940:13565:48;;4229:17:49;:::i;940:13565:48:-;;;;;;-1:-1:-1;;940:13565:48;;;;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;6657:33:50;940:13565:48;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;;:::o;:::-;;:::i;7856:190:50:-;-1:-1:-1;;;;;;;;;;;940:13565:48;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;;7856:190:50;:::o;940:13565:48:-;-1:-1:-1;;940:13565:48;;;;;;;:::o;3318:339:49:-;;4229:17;3442:69;3318:339;;4229:17;:::i;:::-;3442:69;:::i;:::-;3438:185;;-1:-1:-1;;;;;;940:13565:48;3318:339:49:o;3438:185::-;-1:-1:-1;;;940:13565:48;3595:17:49:o;940:13565:48:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;;940:13565:48;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;940:13565:48:o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;6769:888::-;7038:12;;;940:13565;;;7078:15;;;;;;;:::i;:::-;-1:-1:-1;;;940:13565:48;-1:-1:-1;;;;;;940:13565:48;7071:23;;;:::i;:::-;940:13565;7071:72;940:13565;;7172:35;;;;:::i;:::-;7225:27;2386:4;7225:27;;7221:93;;7067:380;;7555:16;7525:47;7067:380;;7555:16;;;;;:::i;:::-;7525:47;;:::i;:::-;7521:86;;7649:1;6769:888;:::o;7521:86::-;940:13565;7588:8;:::o;7221:93::-;940:13565;;-1:-1:-1;;;7279:20:48;;;;;940:13565;;;;;;8643:28;7067:380;7348:27;2386:4;7348:27;;7344:93;;7067:380;;7555:16;7525:47;7067:380;;;10348:196;2762:31:40;2777:15;;;;;;:::i;:::-;2762:31;;:::i;:::-;2841:15;2826:31;2841:15;;;;;;:::i;2826:31::-;3217:23;3259:237;3202:39;3217:23;;;;;;:::i;3202:39::-;2777:15;940:13565:48;;1859:39:40;;-1:-1:-1;;;;;940:13565:48;2717:12:40;3259:237;;;940:13565:48;;;2717:12:40;;940:13565:48;;;;;;;;;;;;;;;2890:19:40;940:13565:48;;;;;;;2890:19:40;;;940:13565:48;2950:27:40;940:13565:48;;;;;;;2950:27:40;;940:13565:48;3016:25:40;940:13565:48;;;;;;;3016:25:40;;940:13565:48;3074:19:40;940:13565:48;;;;;;;3074:19:40;;940:13565:48;3134:27:40;940:13565:48;;;;;;;3134:27:40;;;940:13565:48;;;;;;;;;;;;;;;;;;;3259:237:40;;6691:16:50;3259:237:40;6691:16:50;;3259:237:40;;;;;;;;:::i;:::-;940:13565:48;3603:23:40;;940:13565:48;10481:55;2777:15:40;940:13565:48;10481:55;;;2717:12:40;10481:55:48;;;;940:13565;9905:42;940:13565;;;;;;;;;;;;;10481:55;;;;;;;;;:::i;:::-;940:13565;10471:66;;10348:196;:::o;940:13565::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;940:13565:48;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7312:149:50;-1:-1:-1;940:13565:48;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;-1:-1:-1;940:13565:48;;;;;;-1:-1:-1;940:13565:48;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;940:13565:48;;;;;;;;-1:-1:-1;;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11124:562;940:13565;;;;11257:39;;;11237:59;;:136;;;;;11124:562;11237:216;;;;11124:562;11237:293;;;;11124:562;11237:374;;;;11124:562;11220:438;;;11674:5;11124:562;:::o;11220:438::-;11643:4;11636:11;:::o;11237:374::-;-1:-1:-1;;;11550:61:48;;-1:-1:-1;11237:374:48;;;:293;-1:-1:-1;;;11473:57:48;;;-1:-1:-1;11237:293:48;;:216;-1:-1:-1;;;11393:60:48;;;-1:-1:-1;11237:216:48;;:136;-1:-1:-1;;;11316:57:48;;;-1:-1:-1;11237:136:48;;6145:154:50;940:13565:48;;6145:154:50;940:13565:48;;;;;;;;;6272:19:50;;;940:13565:48;6272:19:50;;;;;;:::i;940:13565:48:-;;;6145:154:50;:::o;4571:475:49:-;4684:23;;:::i;:::-;940:13565:48;;;;;;4888:22:49;940:13565:48;;;;;;4928:25:49;940:13565:48;;4747:282:49;940:13565:48;4747:282:49;;940:13565:48;4775:95:49;940:13565:48;;;;;;;;;;4971:13:49;940:13565:48;;;;5010:4:49;940:13565:48;;;;;4747:282:49;;;;;:::i;744:637:41:-;833:531;;;;;;;;;;;;;;;;;744:637;:::o;833:531::-;;;;;;11026:189:50;11085:26;11100:10;11085:26;:::i;:::-;:59;;;;11026:189;11081:96;;940:13565:48;;-1:-1:-1;;;11194:14:50;;;;;11085:59;11138:4;;11100:10;11116:27;11085:59;;940:13565:48;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;940:13565:48;;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;940:13565:48;;;;9610:324:50;940:13565:48;;;;:::i;:::-;;;9698:51:50;;940:13565:48;;;:::i;:::-;9846:4:50;940:13565:48;9846:4:50;940:13565:48;;;;;;;;;-1:-1:-1;940:13565:48;;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;-1:-1:-1;940:13565:48;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;9905:22:50;940:13565:48;;9905:22:50;940:13565:48;-1:-1:-1;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;9905:22:50;;;;;:::i;:::-;;;;9610:324::o;940:13565:48:-;;;;;;;;;;6691:16:50;;;;940:13565:48;;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;;;;9905:22:50;940:13565:48;;9846:4:50;940:13565:48;;9905:22:50;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9698:51:50;940:13565:48;;-1:-1:-1;;;9730:19:50;;940:13565:48;9730:19:50;;;940:13565:48;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;12726:1307::-;;;12886:41;12726:1307;12886:41;;;;:::i;:::-;940:13565;12963:35;940:13565;;12963:35;:::i;:::-;13034:2;;940:13565;;;;13013:23;13009:604;;940:13565;;13648:2;13627:23;;13623:351;;13648:2;940:13565;-1:-1:-1;;;13991:35:48;;940:13565;13991:35;940:13565;13991:35;;;;:::i;13623:351::-;13691:42;13895:16;13784:61;13691:42;;;;;;13867:96;13691:42;;;;;;:::i;:::-;13795:24;;;;;940:13565;;;;13784:61;;;;;;:::i;:::-;13648:2;940:13565;13895:16;;;940:13565;;;;;;;;;13895:16;940:13565;13895:16;13867:96;:::i;13009:604::-;940:13565;;;;;-1:-1:-1;;;;;13064:19:48;940:13565;13064:19;:::i;:::-;13056:48;13052:318;;13411:92;13524:78;13411:92;;;;13577:24;;;13524:78;;:::i;13052:318::-;940:13565;;-1:-1:-1;;;13316:39:48;;940:13565;13316:39;940:13565;13316:39;;;;:::i;940:13565::-;;;;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;1530:1:29;940:13565:48;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;940:13565:48;;;;:::o;:::-;;;:::o;12123:302::-;-1:-1:-1;12123:302:48;;;12245:31;;;;;;;;;;;:::i;:::-;12290:8;;12286:133;;12123:302;:::o;12286:133::-;12245:31;12314:95;;;;;12123:302;;12245:31;12123:302;;;12245:31;;;;;;;;;;:::i;940:13565::-;;;;;;;;;;;;;;;:::o;8701:670:50:-;;-1:-1:-1;;;;;;;;;;;940:13565:48;-1:-1:-1;8932:3:50;940:13565:48;;8913:17:50;;;;;8975:2;8955:9;;;;;:::i;:::-;;940:13565:48;8955:22:50;;:48;;;8932:3;8951:128;;9097:9;;;;:::i;:::-;;940:13565:48;9097:22:50;:73;;;8932:3;9093:157;;9281:9;9292:17;9281:9;940:13565:48;9281:9:50;;;:::i;:::-;;9292:17;;;;:::i;:::-;;;:::i;:::-;940:13565:48;8902:9:50;;9093:157;9225:9;9197:38;9225:9;;;:::i;:::-;;940:13565:48;;-1:-1:-1;;;9197:38:50;;940:13565:48;;;9197:38:50;;;;:::i;9097:73::-;-1:-1:-1;;;;;;9131:18:50;9139:9;;;;:::i;:::-;;9131:18;:::i;:::-;9123:47;9097:73;;8951:128;9030:34;9054:9;;;;:::i;:::-;;940:13565:48;;-1:-1:-1;;;9030:34:50;;940:13565:48;;;9030:34:50;;;;:::i;8955:48::-;8981:9;9001:2;8981:9;;;;:::i;:::-;;940:13565:48;8981:22:50;;8955:48;;8913:17;-1:-1:-1;;;;;;;;;;;;940:13565:48;8913:17:50;-1:-1:-1;940:13565:48:o;14345:158::-;940:13565;;;;;:::i;:::-;;;;-1:-1:-1;;;940:13565:48;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;940:13565:48;;;;14345:158;:::o;940:13565::-;;;;;;;;;;;;;-1:-1:-1;940:13565:48;;;;;;;;-1:-1:-1;;940:13565:48;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10714:9:50;940:13565:48;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;10273:575:50:-;;;940:13565:48;7409:45:50;;940:13565:48;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;7409:45:50;940:13565:48;:::i;:::-;;;10421:18:50;10417:52;;940:13565:48;;;;;10483:17:50;940:13565:48;;;;;:::i;:::-;;;;;;10504:16:50;10483:37;10479:151;;940:13565:48;;;;;;10816:25:50;940:13565:48;;:::i;:::-;;;-1:-1:-1;;940:13565:48;;;;;10740:28:50;10747:21;;940:13565:48;;-1:-1:-1;;;;;;;;;;;940:13565:48;;;;;;;10747:21:50;10740:28;:::i;:::-;10778:22;;-1:-1:-1;;;;;;;;;;;940:13565:48;10778:22:50;:::i;:::-;-1:-1:-1;;;;;;;;;;;940:13565:48;;10778:22:50;10816:25;940:13565:48;;10816:25:50;;;;;:::i;10479:151::-;940:13565:48;;-1:-1:-1;;;10543:76:50;;940:13565:48;;;10543:76:50;;940:13565:48;;10543:76:50;;;;:::i;10417:52::-;940:13565:48;;-1:-1:-1;;;10448:21:50;;;;;940:13565:48;;;;;8643:28;5526:176:49;5657:17;;:::i;:::-;940:13565:48;;;6253:35:49;;;940:13565:48;1323:53:49;940:13565:48;;;;;;;6253:35:49;;;;;:::i;:::-;940:13565:48;6243:46:49;;940:13565:48;;5628:66:49;6253:35;5628:66;;940:13565:48;;;;;;;;;;;;;;;5628:66:49;;940:13565:48;;;;;;-1:-1:-1;;;;;940:13565:48;;;;;;;;5618:77:49;;5526:176;:::o;1980:4154:43:-;940:13565:48;;1980:4154:43;;-1:-1:-1;;;;;2181:3947:43;;;;1980:4154;;;:::o;2181:3947::-;;;;;;;;;;;940:13565:48;2181:3947:43;;;;;;;;;;;;;;;;;;;;;;;940:13565:48;2181:3947:43;;;;;940:13565:48;;;2181:3947:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1980:4154::o;2181:3947::-;;;;;;940:13565:48;2181:3947:43;;;;;;;;;;;;;940:13565:48;2181:3947:43;;;;;;;;;;;;;;;;;940:13565:48;2181:3947:43;;;;;-1:-1:-1;2181:3947:43;;-1:-1:-1;;;1980:4154:43:o;2181:3947::-;;;;;;;;;;;;;-1:-1:-1;;;;;2181:3947:43;;;;;940:13565:48;2181:3947:43;940:13565:48;2181:3947:43;940:13565:48;;2181:3947:43;;;;;;;;;;;;;;;2132:21:47;;7261:2;2132:21;;;;;;;:::o;:::-;;2566:1:29;2132:21:47;;;;;;;:::o;:::-;;;;;;;;;;:::o;2643:34::-;;;;940:13565:48;;2643:34:47;;;;;;;;;940:13565:48;;;2643:34:47;;;;;;940:13565:48;;;:::i;:::-;;;2643:34:47;;;;940:13565:48;;2643:34:47;;;;;;;;;;:::i;:::-;940:13565:48;;7178:27:47;2643:34;;;;;;;:::o;1986:4::-;940:13565:48;;1986:4:47;;;;;;;;940:13565:48;1986:4:47;;;940:13565:48;1986:4:47;;940:13565:48;;;;;;;;:::i;:::-;;;;;1986:4:47;;:::o;2396:14::-;;;;;;;;;940:13565:48;2396:14:47;:::o;6711:2934::-;;;;6894:14;;;2162:66:46;940:13565:48;;6894:30:47;6890:125;;7178:27;;;;;;2643:34;7178:86;:27;;7212:22;;;940:13565:48;7236:27:47;;;:::i;:::-;7178:86;;:::i;:::-;940:13565:48;;;;;7278:23:47;:46;7274:89;;1078:32:29;7516:64:47;940:13565:48;;;:::i;:::-;1078:32:29;;:::i;:::-;7516:64:47;:::i;:::-;7635:118;:27;;7669;;;940:13565:48;7698:54:47;940:13565:48;;7698:54:47;;:::i;7635:118::-;940:13565:48;;;;;7767:33:47;940:13565:48;;;;;;7804:28:47;7767:65;7763:108;;940:13565:48;2643:34:47;;7987:30;:34;;:30;;:34;:::i;:::-;2643;-1:-1:-1;;;;;;940:13565:48;;2643:34:47;7987;:56;:79;7983:122;;12976:21:48;1986:4:47;8563:27;;;7669;940:13565:48;1986:4:47;;;;;:::i;:::-;8550:42;;;;;;;;12976:21:48;8550:42:47;8795:30;12976:21:48;1986:4:47;8795:30;;8778:68;7669:27;940:13565:48;8778:68:47;;;;;;;:::i;:::-;;6691:16:50;8778:68:47;6691:16:50;;8778:68:47;;;;;;;;:::i;:::-;7669:27;940:13565:48;1986:4:47;;;;;:::i;:::-;8771:76;;8550:42;8771:76;;;;;12976:21:48;8771:76:47;8901:14;8771:76;;;8901:14;;;;940:13565:48;8877:61:47;940:13565:48;;;;8877:61:47;940:13565:48;;;;7669:27:47;940:13565:48;8877:61:47;;;;;;;1986:4;;;;;;;;;;;;940:13565:48;;;1986:4:47;;;940:13565:48;1986:4:47;;;940:13565:48;1986:4:47;;;940:13565:48;1986:4:47;940:13565:48;1986:4:47;8877:61;9030:26;;2404:5;9030:26;;;;;:::i;:::-;940:13565:48;;;9491:16:47;;;;6711:2934;9487:60;;940:13565:48;;9565:73:47;940:13565:48;;;;;9565:73:47;;:::i;9487:60::-;1776:4;;9516:26;;-1:-1:-1;9516:26:47;;;;;-1:-1:-1;9516:26:47;;-1:-1:-1;9516:26:47;;-1:-1:-1;;9516:26:47:i;:::-;:31;9509:38;:::o;9491:16::-;9463:14;;;;9491:16;;8771:76;;:::i;7983:122::-;8082:12;;;;;;12976:21:48;8082:12:47;:::o;7274:89::-;7340:12;;;;;;;12976:21:48;7340:12:47;:::o;6890:125::-;6992:12;;;;;12976:21:48;6992:12:47;:::o;30663:1307:42:-;30855:1109;;940:13565:48;;30663:1307:42;;;30855:1109;;;;;;30663:1307;30855:1109;;;;;;30663:1307;30855:1109;;;;;;30663:1307;;;:::o;30855:1109::-;;;;;;;;;;;;-1:-1:-1;;;6691:16:50;30855:1109:42;6691:16:50;;30855:1109:42;6691:16:50;;30855:1109:42;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;30855:1109:42;;;;;;;-1:-1:-1;30855:1109:42;;;;;;;30663:1307::o;30855:1109::-;;;;;;;;-1:-1:-1;30855:1109:42;;;940:13565:48;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;1562:703:45:-;;;;;;1691:6;;:32;;;;1562:703;1691:42;;;;1562:703;1691:68;;;;1562:703;1687:111;;1821:39;;;;:::i;:::-;1820:40;1816:83;;3235:647:46;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3235:647:46;;;;;;;940:13565:48;3235:647:46;940:13565:48;3235:647:46;940:13565:48;;3235:647:46;;;;2222:3:45;3235:647:46;;2132:64:45;3235:647:46;;2062:34:45;;;;1984:49;;2132:64;;:::i;:::-;2222:3;;:::i;:::-;2211:18;;2251:7;1562:703;:::o;1691:68::-;1737:22;-1:-1:-1;;;;;;;;;;;1737:22:45;;;1691:68;;:42;1727:6;;;1691:42;;:32;1701:22;-1:-1:-1;;;;;;;;;;;1701:22:45;;;1691:32;;3357:265:38;3439:177;;;;;;;3357:265;:::o;940:13565:48:-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;6691:16:50;940:13565:48;6691:16:50;;940:13565:48;;:::i;:::-;;;;;;;;:::o;1186:4022:29:-;940:13565:48;;1515:16:29;1511:31;;2606:24;2547:25;2548:19;:15;940:13565:48;;2548:15:29;:::i;:::-;:19;:::i;:::-;2571:1;2162:66:46;;;;2547:25:29;2606:24;:::i;:::-;2641:2537;;;;;;;;;;;;;;;;;2503:69;2641:2537;;;;;;;;;;;;;1186:4022;:::o;2641:2537::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:31;940:13565:48;;;;:::i;12684:438:46:-;-1:-1:-1;;;;;;;;1531:66:46;12774:6;;;;;;:16;;12684:438;12774:42;;;;12684:438;12770:85;;1802:66;12990:15;;;;1666:66;12990:15;;;12966;;;;;12959:29;12952:57;13039:17;12902:15;;;13095:10;12684:438;:::o;12770:85::-;12832:12;;;12839:5;12832:12;:::o;12774:42::-;12796:6;;;12795:20;;12774:42;12795:20;12808:6;;;12774:42;;:16;12784:6;;;;;12774:16;;13895:6587;940:13565:48;;14174:3:46;;13895:6587;;940:13565:48;14256:13:46;;;:30;;13895:6587;14252:44;;14322:25;;;;:::i;:::-;14366:5;;;;14365:16;;;13895:6587;14362:211;;13895:6587;14586:5830;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:13565:48;;;;;;14586:5830:46;;;;;;940:13565:48;;;14586:5830:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;14586:5830:46;;;;-1:-1:-1;;;;;1531:66:46;;;14586:5830;;;;;;;940:13565:48;14586:5830:46;940:13565:48;14586:5830:46;940:13565:48;;14586:5830:46;;;;;;;13895:6587;:::o;14586:5830::-;-1:-1:-1;;;;;1531:66:46;;;;;;;;;;14586:5830;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;14586:5830;-1:-1:-1;;;;;;;;14586:5830:46;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;14586:5830;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;14586:5830;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;;;;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;14586:5830:46;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;14586:5830;;1531:66;14586:5830;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;14586:5830;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;14586:5830;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;;;;1531:66;;;;14586:5830;;;;;;;;-1:-1:-1;;;;;;;;1531:66:46;;14586:5830;;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;14586:5830;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;;14586:5830;;;;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;;14586:5830;;;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;1531:66:46;;;;;14586:5830;;-1:-1:-1;;;;;;;;14586:5830:46;;;;;;;;;-1:-1:-1;;;;;;;;14586:5830:46;;;;1531:66;14586:5830;;;;;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;;14586:5830;;;-1:-1:-1;;;;;;;;;;;14586:5830:46;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;14586:5830;;-1:-1:-1;;;;;;;;14586:5830:46;;;;1531:66;14586:5830;;;;;-1:-1:-1;;14586:5830:46;;;;;;;;;;;;;1531:66;;;;;;-1:-1:-1;;;;;;;;;1531:66:46;-1:-1:-1;1531:66:46;;;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;14586:5830;;;1531:66;14586:5830;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;14586:5830;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;14586:5830;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;14586:5830;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;;;-1:-1:-1;;;;;;;;14586:5830:46;;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;;;;;-1:-1:-1;;;;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;-1:-1:-1;;;;;;;;14586:5830:46;-1:-1:-1;;;;;;;;;;;14586:5830:46;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;;;14586:5830;;;;;1531:66;-1:-1:-1;;;;;;;;1531:66:46;14586:5830;;;;;;;;;;-1:-1:-1;14586:5830:46;;;;-1:-1:-1;14586:5830:46;;-1:-1:-1;14586:5830:46;-1:-1:-1;14586:5830:46;;;;;;;;;;-1:-1:-1;14586:5830:46;;-1:-1:-1;14586:5830:46;;-1:-1:-1;14586:5830:46;;-1:-1:-1;14586:5830:46;;-1:-1:-1;14586:5830:46;;;;;;-1:-1:-1;;;;;;;;;;;2032:66:46;14586:5830;;;-1:-1:-1;1531:66:46;;;;;;-1:-1:-1;;;;;;;;14586:5830:46;;-1:-1:-1;14586:5830:46;;;;;;;;;;;;;;;;-1:-1:-1;14586:5830:46;;;;-1:-1:-1;14586:5830:46;;;-1:-1:-1;;;;;;;;;;;1938:66:46;-1:-1:-1;2032:66:46;;-1:-1:-1;14586:5830:46;;;940:13565:48;;14586:5830:46;;;;;;;;;;;;;;;;;;14362:211;2162:66;;;-1:-1:-1;;;;;;;;;;;2032:66:46;;;14437:31;;14486:10;940:13565:48;14518:13:46;;;:30;;;14362:211;14514:44;14362:211;14514:44;14550:8;;;;;;;;;940:13565:48;14550:8:46;:::o;14518:30::-;;14535:13;14518:30;;14365:16;14375:5;;;14365:16;;14256:30;14273:13;;;14256:30;;13224:499;2032:66;;13224:499;-1:-1:-1;;;;;;;;;;;1938:66:46;12535:6;;13437:41;;13492:6;;;13491:18;;;13224:499;13488:181;;;-1:-1:-1;;;;;;;;;1531:66:46;9612:681;-1:-1:-1;1531:66:46;9612:681;;;;;;;;;;;;;;;;;;;;;;;;13563:1;9612:681;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;9612:681:46;;;;;;;;13563:1;9612:681;;;;;;;;;;;;;;;;;;;13525:42;13488:181;;4081:643;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;4081:643:46;;;;-1:-1:-1;;;;;1531:66:46;;;4081:643;;;;;;;940:13565:48;4081:643:46;940:13565:48;4081:643:46;940:13565:48;;4081:643:46;;;;;;;;;9186:21;;;9232:17;;9271:20;;9135;;13224:499;:::o;13488:181::-;13627:31;;;;;;;;:::i;:::-;13605:53;;;;13488:181;;13491:18;13502:6;;;;13491:18;;13437:41;13463:15;;;;:::o;10559:1073::-;13645:1;10559:1073;;;10867:673;-1:-1:-1;;;;;1531:66:46;;;10867:673;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;10867:673:46;;;;;;-1:-1:-1;;;;;;;;;;;10867:673:46;;;;;;;;;;;11602:23;;;;10867:673;;;;;;;;;;13645:1;10867:673;;13645:1;10867:673;10559:1073;:::o","linkReferences":{},"immutableReferences":{"47718":[{"start":1877,"length":32},{"start":2168,"length":32}]}},"methodIdentifiers":{"REPLAYABLE_NONCE_KEY()":"88ce4c7c","addOwnerAddress(address)":"0f0f3f24","addOwnerPublicKey(bytes32,bytes32)":"29565e3b","canSkipChainIdValidation(bytes4)":"9f9bcb34","domainSeparator()":"f698da25","eip712Domain()":"84b0196e","entryPoint()":"b0d691fe","execute(address,uint256,bytes)":"b61d27f6","executeBatch((address,uint256,bytes)[])":"34fcd5be","executeWithoutChainIdValidation(bytes[])":"2c2abd1e","getUserOpHashWithoutChainId((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":"4f6e7f22","implementation()":"5c60da1b","initialize(bytes[])":"6f2de70e","isOwnerAddress(address)":"a2e1a8d8","isOwnerBytes(bytes)":"1ca5393f","isOwnerPublicKey(bytes32,bytes32)":"066a1eb7","isValidSignature(bytes32,bytes)":"1626ba7e","nextOwnerIndex()":"d948fd2e","ownerAtIndex(uint256)":"8ea69029","ownerCount()":"0db02622","proxiableUUID()":"52d1902d","removeLastOwner(uint256,bytes)":"b8197367","removeOwnerAtIndex(uint256,bytes)":"89625b57","removedOwnersCount()":"36d9cf9b","replaySafeHash(bytes32)":"ce1506be","upgradeToAndCall(address,bytes)":"4f1ef286","validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":"3a871cdd"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"AlreadyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Initialized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"InvalidEthereumAddressOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"key\",\"type\":\"uint256\"}],\"name\":\"InvalidNonceKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"InvalidOwnerBytesLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LastOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NoOwnerAtIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownersRemaining\",\"type\":\"uint256\"}],\"name\":\"NotLastOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"SelectorNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UpgradeFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"expectedOwner\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"actualOwner\",\"type\":\"bytes\"}],\"name\":\"WrongOwnerAtIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"AddOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"RemoveOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"REPLAYABLE_NONCE_KEY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwnerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"addOwnerPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"functionSelector\",\"type\":\"bytes4\"}],\"name\":\"canSkipChainIdValidation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"domainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryPoint\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct CoinbaseSmartWallet.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"calls\",\"type\":\"bytes[]\"}],\"name\":\"executeWithoutChainIdValidation\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"}],\"name\":\"getUserOpHashWithoutChainId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"$\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"owners\",\"type\":\"bytes[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwnerAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"account\",\"type\":\"bytes\"}],\"name\":\"isOwnerBytes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"isOwnerPublicKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"result\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOwnerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ownerAtIndex\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"removeLastOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"removeOwnerAtIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removedOwnersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"replaySafeHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"initCode\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"callGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"verificationGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"preVerificationGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPriorityFeePerGas\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"paymasterAndData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct UserOperation\",\"name\":\"userOp\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"userOpHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"missingAccountFunds\",\"type\":\"uint256\"}],\"name\":\"validateUserOp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"validationData\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Coinbase (https://github.com/coinbase/smart-wallet)Solady (https://github.com/vectorized/solady/blob/main/src/accounts/ERC4337.sol)\",\"errors\":{\"AlreadyOwner(bytes)\":[{\"params\":{\"owner\":\"The owner bytes.\"}}],\"InvalidEthereumAddressOwner(bytes)\":[{\"params\":{\"owner\":\"The invalid owner.\"}}],\"InvalidNonceKey(uint256)\":[{\"details\":\"Calls to `this.executeWithoutChainIdValidation` MUST use `REPLAYABLE_NONCE_KEY` and      calls NOT to `this.executeWithoutChainIdValidation` MUST NOT use `REPLAYABLE_NONCE_KEY`.\",\"params\":{\"key\":\"The invalid `UserOperation.nonce` key.\"}}],\"InvalidOwnerBytesLength(bytes)\":[{\"params\":{\"owner\":\"The invalid owner.\"}}],\"NoOwnerAtIndex(uint256)\":[{\"params\":{\"index\":\"The targeted index for removal.\"}}],\"NotLastOwner(uint256)\":[{\"params\":{\"ownersRemaining\":\"The number of current owners.\"}}],\"SelectorNotAllowed(bytes4)\":[{\"params\":{\"selector\":\"The selector of the call.\"}}],\"UnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized call context.\"}],\"UpgradeFailed()\":[{\"details\":\"The upgrade failed.\"}],\"WrongOwnerAtIndex(uint256,bytes,bytes)\":[{\"params\":{\"actualOwner\":\"The actual owner at `index`.\",\"expectedOwner\":\"The owner passed in the remove call.\",\"index\":\"The index of the owner to be removed.\"}}]},\"events\":{\"AddOwner(uint256,bytes)\":{\"params\":{\"index\":\"The owner index of the owner added.\",\"owner\":\"The owner added.\"}},\"RemoveOwner(uint256,bytes)\":{\"params\":{\"index\":\"The owner index of the owner removed.\",\"owner\":\"The owner removed.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the proxy's implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addOwnerAddress(address)\":{\"params\":{\"owner\":\"The owner address.\"}},\"addOwnerPublicKey(bytes32,bytes32)\":{\"params\":{\"x\":\"The owner public key x coordinate.\",\"y\":\"The owner public key y coordinate.\"}},\"canSkipChainIdValidation(bytes4)\":{\"returns\":{\"_0\":\"`true` is the function selector is allowed to skip the chain ID validation, else `false`.\"}},\"domainSeparator()\":{\"details\":\"Implements domainSeparator = hashStruct(eip712Domain).      See https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.\",\"returns\":{\"_0\":\"The 32 bytes domain separator result.\"}},\"eip712Domain()\":{\"details\":\"Follows ERC-5267 (see https://eips.ethereum.org/EIPS/eip-5267).\",\"returns\":{\"chainId\":\"The value of the `EIP712Domain.chainId` field.\",\"extensions\":\"The list of EIP numbers, that extends EIP-712 with new domain fields.\",\"fields\":\"The bitmap of used fields.\",\"name\":\"The value of the `EIP712Domain.name` field.\",\"salt\":\"The value of the `EIP712Domain.salt` field.\",\"verifyingContract\":\"The value of the `EIP712Domain.verifyingContract` field.\",\"version\":\"The value of the `EIP712Domain.version` field.\"}},\"entryPoint()\":{\"returns\":{\"_0\":\"The address of the EntryPoint v0.6\"}},\"execute(address,uint256,bytes)\":{\"details\":\"Can only be called by the Entrypoint or an owner of this account (including itself).\",\"params\":{\"data\":\"The data of the call.\",\"target\":\"The address to call.\",\"value\":\"The value to send with the call.\"}},\"executeBatch((address,uint256,bytes)[])\":{\"details\":\"Can only be called by the Entrypoint or an owner of this account (including itself).\",\"params\":{\"calls\":\"The list of `Call`s to execute.\"}},\"executeWithoutChainIdValidation(bytes[])\":{\"details\":\"Can only be called by the Entrypoint.Reverts if the given call is not authorized to skip the chain ID validtion.`validateUserOp()` will recompute the `userOpHash` without the chain ID before validating      it if the `UserOperation.calldata` is calling this function. This allows certain UserOperations      to be replayed for all accounts sharing the same address across chains. E.g. This may be      useful for syncing owner changes.\",\"params\":{\"calls\":\"An array of calldata to use for separate self calls.\"}},\"getUserOpHashWithoutChainId((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"details\":\"This allows accounts to sign a hash that can be used on many chains.\",\"params\":{\"userOp\":\"The `UserOperation` to compute the hash for.\"},\"returns\":{\"_0\":\"The `UserOperation` hash, which does not depend on chain ID.\"}},\"implementation()\":{\"returns\":{\"$\":\"The address of implementation contract.\"}},\"initialize(bytes[])\":{\"details\":\"Reverts if the account has had at least one owner, i.e. has been initialized.\",\"params\":{\"owners\":\"Array of initial owners for this account. Each item should be               an ABI encoded Ethereum address, i.e. 32 bytes with 12 leading 0 bytes,               or a 64 byte public key.\"}},\"isOwnerAddress(address)\":{\"params\":{\"account\":\"The account address to check.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"isOwnerBytes(bytes)\":{\"params\":{\"account\":\"The account, should be ABI encoded address or public key.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"isOwnerPublicKey(bytes32,bytes32)\":{\"params\":{\"x\":\"The public key x coordinate.\",\"y\":\"The public key y coordinate.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"This implementation follows ERC-1271. See https://eips.ethereum.org/EIPS/eip-1271.IMPORTANT: Signature verification is performed on the hash produced AFTER applying the anti      cross-account-replay layer on the given `hash` (i.e., verification is run on the replay-safe      hash version).\",\"params\":{\"hash\":\"The original hash.\",\"signature\":\"The signature of the replay-safe hash to validate.\"},\"returns\":{\"result\":\"`0x1626ba7e` if validation succeeded, else `0xffffffff`.\"}},\"nextOwnerIndex()\":{\"returns\":{\"_0\":\"The next index that will be used to add a new owner.\"}},\"ownerAtIndex(uint256)\":{\"params\":{\"index\":\"The index to lookup.\"},\"returns\":{\"_0\":\"The owner bytes (empty if no owner is registered at this `index`).\"}},\"ownerCount()\":{\"returns\":{\"_0\":\"The current owner count\"}},\"proxiableUUID()\":{\"details\":\"Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract.\"},\"removeLastOwner(uint256,bytes)\":{\"details\":\"Reverts if the owner is not registered at `index`.Reverts if there is currently more than one owner.Reverts if `owner` does not match bytes found at `index`.\",\"params\":{\"index\":\"The index of the owner to be removed.\",\"owner\":\"The ABI encoded bytes of the owner to be removed.\"}},\"removeOwnerAtIndex(uint256,bytes)\":{\"details\":\"Reverts if the owner is not registered at `index`.Reverts if there is currently only one owner.Reverts if `owner` does not match bytes found at `index`.\",\"params\":{\"index\":\"The index of the owner to be removed.\",\"owner\":\"The ABI encoded bytes of the owner to be removed.\"}},\"removedOwnersCount()\":{\"details\":\"Used with `this.nextOwnerIndex` to avoid removing all owners\",\"returns\":{\"_0\":\"The number of owners that have been removed.\"}},\"replaySafeHash(bytes32)\":{\"details\":\"The returned EIP-712 compliant replay-safe hash is the result of:      keccak256(         \\\\x19\\\\x01 ||         this.domainSeparator ||         hashStruct(CoinbaseSmartWalletMessage({ hash: `hash`}))      )\",\"params\":{\"hash\":\"The original hash.\"},\"returns\":{\"_0\":\"The corresponding replay-safe hash.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"details\":\"Signature failure should be reported by returning 1 (see: `this._isValidSignature`). This      allows making a \\\"simulation call\\\" without a valid signature. Other failures (e.g. invalid signature format)      should still revert to signal failure.Reverts if the `UserOperation.nonce` key is invalid for `UserOperation.calldata`.Reverts if the signature format is incorrect or invalid for owner type.\",\"params\":{\"missingAccountFunds\":\"The missing account funds that must be deposited on the Entrypoint.\",\"userOp\":\"The `UserOperation` to validate.\",\"userOpHash\":\"The `UserOperation` hash, as computed by `EntryPoint.getUserOpHash(UserOperation)`.\"},\"returns\":{\"validationData\":\"The encoded `ValidationData` structure:                        `(uint256(validAfter) << (160 + 48)) | (uint256(validUntil) << 160) | (success ? 0 : 1)`                        where `validUntil` is 0 (indefinite) and `validAfter` is 0.\"}}},\"stateVariables\":{\"REPLAYABLE_NONCE_KEY\":{\"details\":\"MUST BE the `UserOperation.nonce` key when `UserOperation.calldata` is calling      `executeWithoutChainIdValidation`and MUST NOT BE `UserOperation.nonce` key when `UserOperation.calldata` is      NOT calling `executeWithoutChainIdValidation`.Helps enforce sequential sequencing of replayable transactions.\"}},\"title\":\"Coinbase Smart Wallet\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyOwner(bytes)\":[{\"notice\":\"Thrown when trying to add an already registered owner.\"}],\"Initialized()\":[{\"notice\":\"Thrown when `initialize` is called but the account already has had at least one owner.\"}],\"InvalidEthereumAddressOwner(bytes)\":[{\"notice\":\"Thrown if a provided owner is 32 bytes long but does not fit in an `address` type.\"}],\"InvalidNonceKey(uint256)\":[{\"notice\":\"Thrown in validateUserOp if the key of `UserOperation.nonce` does not match the calldata.\"}],\"InvalidOwnerBytesLength(bytes)\":[{\"notice\":\"Thrown when a provided owner is neither 64 bytes long (for public key)         nor a ABI encoded address.\"}],\"LastOwner()\":[{\"notice\":\"Thrown when removeOwnerAtIndex is called and there is only one current owner.\"}],\"NoOwnerAtIndex(uint256)\":[{\"notice\":\"Thrown when trying to remove an owner from an index that is empty.\"}],\"NotLastOwner(uint256)\":[{\"notice\":\"Thrown when removeLastOwner is called and there is more than one current owner.\"}],\"SelectorNotAllowed(bytes4)\":[{\"notice\":\"Thrown when a call is passed to `executeWithoutChainIdValidation` that is not allowed by         `canSkipChainIdValidation`\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when the `msg.sender` is not an owner and is trying to call a privileged function.\"}],\"WrongOwnerAtIndex(uint256,bytes,bytes)\":[{\"notice\":\"Thrown when `owner` argument does not match owner found at index.\"}]},\"events\":{\"AddOwner(uint256,bytes)\":{\"notice\":\"Emitted when a new owner is registered.\"},\"RemoveOwner(uint256,bytes)\":{\"notice\":\"Emitted when an owner is removed.\"}},\"kind\":\"user\",\"methods\":{\"REPLAYABLE_NONCE_KEY()\":{\"notice\":\"Reserved nonce key (upper 192 bits of `UserOperation.nonce`) for cross-chain replayable         transactions.\"},\"addOwnerAddress(address)\":{\"notice\":\"Adds a new Ethereum-address owner.\"},\"addOwnerPublicKey(bytes32,bytes32)\":{\"notice\":\"Adds a new public-key owner.\"},\"domainSeparator()\":{\"notice\":\"Returns the `domainSeparator` used to create EIP-712 compliant hashes.\"},\"eip712Domain()\":{\"notice\":\"Returns information about the `EIP712Domain` used to create EIP-712 compliant hashes.\"},\"entryPoint()\":{\"notice\":\"Returns the address of the EntryPoint v0.6.\"},\"execute(address,uint256,bytes)\":{\"notice\":\"Executes the given call from this account.\"},\"executeBatch((address,uint256,bytes)[])\":{\"notice\":\"Executes batch of `Call`s.\"},\"executeWithoutChainIdValidation(bytes[])\":{\"notice\":\"Executes `calls` on this account (i.e. self call).\"},\"getUserOpHashWithoutChainId((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))\":{\"notice\":\"Computes the hash of the `UserOperation` in the same way as EntryPoint v0.6, but         leaves out the chain ID.\"},\"implementation()\":{\"notice\":\"Returns the implementation of the ERC1967 proxy.\"},\"initialize(bytes[])\":{\"notice\":\"Initializes the account with the `owners`.\"},\"isOwnerAddress(address)\":{\"notice\":\"Checks if the given `account` address is registered as owner.\"},\"isOwnerBytes(bytes)\":{\"notice\":\"Checks if the given `account` bytes is registered as owner.\"},\"isOwnerPublicKey(bytes32,bytes32)\":{\"notice\":\"Checks if the given `x`, `y` public key is registered as owner.\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Validates the `signature` against the given `hash`.\"},\"nextOwnerIndex()\":{\"notice\":\"Returns the next index that will be used to add a new owner.\"},\"ownerAtIndex(uint256)\":{\"notice\":\"Returns the owner bytes at the given `index`.\"},\"ownerCount()\":{\"notice\":\"Returns the current number of owners\"},\"removeLastOwner(uint256,bytes)\":{\"notice\":\"Removes owner at the given `index`, which should be the only current owner.\"},\"removeOwnerAtIndex(uint256,bytes)\":{\"notice\":\"Removes owner at the given `index`.\"},\"removedOwnersCount()\":{\"notice\":\"Tracks the number of owners removed\"},\"replaySafeHash(bytes32)\":{\"notice\":\"Wrapper around `_eip712Hash()` to produce a replay-safe hash fron the given `hash`.\"},\"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)\":{\"notice\":\"ERC-4337 `validateUserOp` method. The EntryPoint will         call `UserOperation.sender.call(UserOperation.callData)` only if this validation call returns         successfully.\"}},\"notice\":\"ERC-4337-compatible smart account, based on Solady's ERC4337 account implementation         with inspiration from Alchemy's LightAccount and Daimo's DaimoAccount.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/smart-wallet/src/CoinbaseSmartWallet.sol\":\"CoinbaseSmartWallet\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":FreshCryptoLib/=lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/\",\":account-abstraction/=lib/smart-wallet/lib/account-abstraction/contracts/\",\":ds-test/=lib/smart-wallet/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":p256-verifier/=lib/smart-wallet/lib/p256-verifier/\",\":safe-singleton-deployer-sol/=lib/smart-wallet/lib/safe-singleton-deployer-sol/\",\":smart-wallet/=lib/smart-wallet/src/\",\":solady/=lib/smart-wallet/lib/solady/src/\",\":webauthn-sol/=lib/smart-wallet/lib/webauthn-sol/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"lib/smart-wallet/lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/smart-wallet/lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/smart-wallet/lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/smart-wallet/lib/solady/src/accounts/Receiver.sol\":{\"keccak256\":\"0x9bf48dca73f428c20a0878a5a97d2d66626f835b077c012fd5b1ba6389feb2d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15cb4c81e6c5b2f609e5c6ba13d3241b5c017f9997cab5cebc0572c2dd7f34da\",\"dweb:/ipfs/QmQr7sWaqW27XhyCVGx4wED1rMmFKGhSHPjSGVLz45dbeD\"]},\"lib/smart-wallet/lib/solady/src/utils/LibString.sol\":{\"keccak256\":\"0x4fc555fe1ceb29162b143ce1564ac936099071c853065efc289f6c30c712f125\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f9d3fdb7c03ed63323ae27e0176e080f27ca453f91bacb73f8d59b09da94cf7\",\"dweb:/ipfs/Qmcix9BzxupvYYLX3t8wf4Wsf1yp1b2q65CJb5agaFPtQ9\"]},\"lib/smart-wallet/lib/solady/src/utils/SignatureCheckerLib.sol\":{\"keccak256\":\"0x7a7acc59723ed291f24d9a2ed019109c8be69f32701f35f8a61dc7fff6652379\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bab15a03dfca0567d7472933ee4e776fc21f9dfb6c4dbc06934fa75eceeff5e\",\"dweb:/ipfs/QmPUuKsRwpZXz15DpsoJMMPN9DtZiRvMfwjqJScxkppNsP\"]},\"lib/smart-wallet/lib/solady/src/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x0f4da34fe99caf063e6d3a09d0a4ce783fdcd955b475d46ba00be48f7fda348f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f8e8e92e7b781a8b0d3fdb720915964f46354395a806e87aa7d0a355a024a83\",\"dweb:/ipfs/QmdDmVgUstEYpVQn97jDdaACoqoqiEvcXjxtEhC8b6vmFC\"]},\"lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/FCL_ecdsa.sol\":{\"keccak256\":\"0x679d2e9a655cd7e156a0cfc24de0aca88d4e0b34a8e0dfe6a599f23af092f5a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db31eb84c6f854f076d2501e3d8b5a606fb4924168bdfc6fc3de84e67ed8a80d\",\"dweb:/ipfs/QmWGAmc7B4aT6Ki52uF9QmPQKWipaptit7r3JknBHjUGfe\"]},\"lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/FCL_elliptic.sol\":{\"keccak256\":\"0xac7bb3260a446851f45b8cb71e31d64ca469d7711ed04662092a9554f1283a38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9b0dc5a2306ad3f3a0ff4a5b947fe49422181e97c163ea237fc8bfc6736429d\",\"dweb:/ipfs/QmeruF7BvG5BNnqwqwdshoVXuXqXtajbUYB19KwPynHrQE\"]},\"lib/smart-wallet/lib/webauthn-sol/src/WebAuthn.sol\":{\"keccak256\":\"0x8b940975249f72155110e5e5b4611fc9031330538183862b9d8f12ea7c30ad25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://433957720c13a834b9aab98a5054e9dabe5c660a1a3fb267e6ad1a22b99b68ed\",\"dweb:/ipfs/QmTkQxCCf8kDAHa6rBwLT2mxFXN3tSAWyx4rLmgcLkFkRh\"]},\"lib/smart-wallet/src/CoinbaseSmartWallet.sol\":{\"keccak256\":\"0xd731c0a9472c3383c0f8d5e95a88ea34f70c23a242045f8ece7524e7bb886c74\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4b9a0569def1d98b58f92572128681b9aa48ba224a0b182a06487f8a95704760\",\"dweb:/ipfs/QmeMZVoPHBKbPA6eJzxczdpfynzkcqEfuDdiPPAwmkBFgN\"]},\"lib/smart-wallet/src/ERC1271.sol\":{\"keccak256\":\"0xa9e22c15b7bffce561ab4fcb430a796e306acbf1c8be757b9a2f15546e96ddd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25f8b3d4233c419174f99dc021b0c29fc4f85ed2278fec9419dae7d93a2d9481\",\"dweb:/ipfs/QmTetkPJt5N4Ld9aDMySkjkQQeEBG75HA5LAHdU39ZqnhW\"]},\"lib/smart-wallet/src/MultiOwnable.sol\":{\"keccak256\":\"0x5d7763c89efcbfc8e139daceb1d9908ad181b242c0f20e0cf89271b9a3355a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f8b62a1ab549680497eaa8af1f91eac05a52404903213eb9d0356d349e3e15f\",\"dweb:/ipfs/QmTws27kzakWALcGPEqpsRVtqJFKJeUVCUj5TbM2N81Wu6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"AlreadyOwner"},{"inputs":[],"type":"error","name":"Initialized"},{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"InvalidEthereumAddressOwner"},{"inputs":[{"internalType":"uint256","name":"key","type":"uint256"}],"type":"error","name":"InvalidNonceKey"},{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"InvalidOwnerBytesLength"},{"inputs":[],"type":"error","name":"LastOwner"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"type":"error","name":"NoOwnerAtIndex"},{"inputs":[{"internalType":"uint256","name":"ownersRemaining","type":"uint256"}],"type":"error","name":"NotLastOwner"},{"inputs":[{"internalType":"bytes4","name":"selector","type":"bytes4"}],"type":"error","name":"SelectorNotAllowed"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[],"type":"error","name":"UnauthorizedCallContext"},{"inputs":[],"type":"error","name":"UpgradeFailed"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"expectedOwner","type":"bytes"},{"internalType":"bytes","name":"actualOwner","type":"bytes"}],"type":"error","name":"WrongOwnerAtIndex"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256","indexed":true},{"internalType":"bytes","name":"owner","type":"bytes","indexed":false}],"type":"event","name":"AddOwner","anonymous":false},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256","indexed":true},{"internalType":"bytes","name":"owner","type":"bytes","indexed":false}],"type":"event","name":"RemoveOwner","anonymous":false},{"inputs":[{"internalType":"address","name":"implementation","type":"address","indexed":true}],"type":"event","name":"Upgraded","anonymous":false},{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[],"stateMutability":"view","type":"function","name":"REPLAYABLE_NONCE_KEY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addOwnerAddress"},{"inputs":[{"internalType":"bytes32","name":"x","type":"bytes32"},{"internalType":"bytes32","name":"y","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"addOwnerPublicKey"},{"inputs":[{"internalType":"bytes4","name":"functionSelector","type":"bytes4"}],"stateMutability":"pure","type":"function","name":"canSkipChainIdValidation","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"entryPoint","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"execute"},{"inputs":[{"internalType":"struct CoinbaseSmartWallet.Call[]","name":"calls","type":"tuple[]","components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"executeBatch"},{"inputs":[{"internalType":"bytes[]","name":"calls","type":"bytes[]"}],"stateMutability":"payable","type":"function","name":"executeWithoutChainIdValidation"},{"inputs":[{"internalType":"struct UserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"getUserOpHashWithoutChainId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"implementation","outputs":[{"internalType":"address","name":"$","type":"address"}]},{"inputs":[{"internalType":"bytes[]","name":"owners","type":"bytes[]"}],"stateMutability":"payable","type":"function","name":"initialize"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isOwnerAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"account","type":"bytes"}],"stateMutability":"view","type":"function","name":"isOwnerBytes","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"x","type":"bytes32"},{"internalType":"bytes32","name":"y","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isOwnerPublicKey","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"},{"internalType":"bytes","name":"signature","type":"bytes"}],"stateMutability":"view","type":"function","name":"isValidSignature","outputs":[{"internalType":"bytes4","name":"result","type":"bytes4"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextOwnerIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerAtIndex","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ownerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"owner","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"removeLastOwner"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"owner","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"removeOwnerAtIndex"},{"inputs":[],"stateMutability":"view","type":"function","name":"removedOwnersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"stateMutability":"view","type":"function","name":"replaySafeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"payable","type":"function","name":"upgradeToAndCall"},{"inputs":[{"internalType":"struct UserOperation","name":"userOp","type":"tuple","components":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"},{"internalType":"bytes","name":"initCode","type":"bytes"},{"internalType":"bytes","name":"callData","type":"bytes"},{"internalType":"uint256","name":"callGasLimit","type":"uint256"},{"internalType":"uint256","name":"verificationGasLimit","type":"uint256"},{"internalType":"uint256","name":"preVerificationGas","type":"uint256"},{"internalType":"uint256","name":"maxFeePerGas","type":"uint256"},{"internalType":"uint256","name":"maxPriorityFeePerGas","type":"uint256"},{"internalType":"bytes","name":"paymasterAndData","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"}]},{"internalType":"bytes32","name":"userOpHash","type":"bytes32"},{"internalType":"uint256","name":"missingAccountFunds","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"validateUserOp","outputs":[{"internalType":"uint256","name":"validationData","type":"uint256"}]},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"addOwnerAddress(address)":{"params":{"owner":"The owner address."}},"addOwnerPublicKey(bytes32,bytes32)":{"params":{"x":"The owner public key x coordinate.","y":"The owner public key y coordinate."}},"canSkipChainIdValidation(bytes4)":{"returns":{"_0":"`true` is the function selector is allowed to skip the chain ID validation, else `false`."}},"domainSeparator()":{"details":"Implements domainSeparator = hashStruct(eip712Domain).      See https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator.","returns":{"_0":"The 32 bytes domain separator result."}},"eip712Domain()":{"details":"Follows ERC-5267 (see https://eips.ethereum.org/EIPS/eip-5267).","returns":{"chainId":"The value of the `EIP712Domain.chainId` field.","extensions":"The list of EIP numbers, that extends EIP-712 with new domain fields.","fields":"The bitmap of used fields.","name":"The value of the `EIP712Domain.name` field.","salt":"The value of the `EIP712Domain.salt` field.","verifyingContract":"The value of the `EIP712Domain.verifyingContract` field.","version":"The value of the `EIP712Domain.version` field."}},"entryPoint()":{"returns":{"_0":"The address of the EntryPoint v0.6"}},"execute(address,uint256,bytes)":{"details":"Can only be called by the Entrypoint or an owner of this account (including itself).","params":{"data":"The data of the call.","target":"The address to call.","value":"The value to send with the call."}},"executeBatch((address,uint256,bytes)[])":{"details":"Can only be called by the Entrypoint or an owner of this account (including itself).","params":{"calls":"The list of `Call`s to execute."}},"executeWithoutChainIdValidation(bytes[])":{"details":"Can only be called by the Entrypoint.Reverts if the given call is not authorized to skip the chain ID validtion.`validateUserOp()` will recompute the `userOpHash` without the chain ID before validating      it if the `UserOperation.calldata` is calling this function. This allows certain UserOperations      to be replayed for all accounts sharing the same address across chains. E.g. This may be      useful for syncing owner changes.","params":{"calls":"An array of calldata to use for separate self calls."}},"getUserOpHashWithoutChainId((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"details":"This allows accounts to sign a hash that can be used on many chains.","params":{"userOp":"The `UserOperation` to compute the hash for."},"returns":{"_0":"The `UserOperation` hash, which does not depend on chain ID."}},"implementation()":{"returns":{"$":"The address of implementation contract."}},"initialize(bytes[])":{"details":"Reverts if the account has had at least one owner, i.e. has been initialized.","params":{"owners":"Array of initial owners for this account. Each item should be               an ABI encoded Ethereum address, i.e. 32 bytes with 12 leading 0 bytes,               or a 64 byte public key."}},"isOwnerAddress(address)":{"params":{"account":"The account address to check."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"isOwnerBytes(bytes)":{"params":{"account":"The account, should be ABI encoded address or public key."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"isOwnerPublicKey(bytes32,bytes32)":{"params":{"x":"The public key x coordinate.","y":"The public key y coordinate."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"isValidSignature(bytes32,bytes)":{"details":"This implementation follows ERC-1271. See https://eips.ethereum.org/EIPS/eip-1271.IMPORTANT: Signature verification is performed on the hash produced AFTER applying the anti      cross-account-replay layer on the given `hash` (i.e., verification is run on the replay-safe      hash version).","params":{"hash":"The original hash.","signature":"The signature of the replay-safe hash to validate."},"returns":{"result":"`0x1626ba7e` if validation succeeded, else `0xffffffff`."}},"nextOwnerIndex()":{"returns":{"_0":"The next index that will be used to add a new owner."}},"ownerAtIndex(uint256)":{"params":{"index":"The index to lookup."},"returns":{"_0":"The owner bytes (empty if no owner is registered at this `index`)."}},"ownerCount()":{"returns":{"_0":"The current owner count"}},"proxiableUUID()":{"details":"Returns the storage slot used by the implementation, as specified in [ERC1822](https://eips.ethereum.org/EIPS/eip-1822). Note: The `notDelegated` modifier prevents accidental upgrades to an implementation that is a proxy contract."},"removeLastOwner(uint256,bytes)":{"details":"Reverts if the owner is not registered at `index`.Reverts if there is currently more than one owner.Reverts if `owner` does not match bytes found at `index`.","params":{"index":"The index of the owner to be removed.","owner":"The ABI encoded bytes of the owner to be removed."}},"removeOwnerAtIndex(uint256,bytes)":{"details":"Reverts if the owner is not registered at `index`.Reverts if there is currently only one owner.Reverts if `owner` does not match bytes found at `index`.","params":{"index":"The index of the owner to be removed.","owner":"The ABI encoded bytes of the owner to be removed."}},"removedOwnersCount()":{"details":"Used with `this.nextOwnerIndex` to avoid removing all owners","returns":{"_0":"The number of owners that have been removed."}},"replaySafeHash(bytes32)":{"details":"The returned EIP-712 compliant replay-safe hash is the result of:      keccak256(         \\x19\\x01 ||         this.domainSeparator ||         hashStruct(CoinbaseSmartWalletMessage({ hash: `hash`}))      )","params":{"hash":"The original hash."},"returns":{"_0":"The corresponding replay-safe hash."}},"upgradeToAndCall(address,bytes)":{"details":"Upgrades the proxy's implementation to `newImplementation`. Emits a {Upgraded} event. Note: Passing in empty `data` skips the delegatecall to `newImplementation`."},"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"details":"Signature failure should be reported by returning 1 (see: `this._isValidSignature`). This      allows making a \"simulation call\" without a valid signature. Other failures (e.g. invalid signature format)      should still revert to signal failure.Reverts if the `UserOperation.nonce` key is invalid for `UserOperation.calldata`.Reverts if the signature format is incorrect or invalid for owner type.","params":{"missingAccountFunds":"The missing account funds that must be deposited on the Entrypoint.","userOp":"The `UserOperation` to validate.","userOpHash":"The `UserOperation` hash, as computed by `EntryPoint.getUserOpHash(UserOperation)`."},"returns":{"validationData":"The encoded `ValidationData` structure:                        `(uint256(validAfter) << (160 + 48)) | (uint256(validUntil) << 160) | (success ? 0 : 1)`                        where `validUntil` is 0 (indefinite) and `validAfter` is 0."}}},"version":1},"userdoc":{"kind":"user","methods":{"REPLAYABLE_NONCE_KEY()":{"notice":"Reserved nonce key (upper 192 bits of `UserOperation.nonce`) for cross-chain replayable         transactions."},"addOwnerAddress(address)":{"notice":"Adds a new Ethereum-address owner."},"addOwnerPublicKey(bytes32,bytes32)":{"notice":"Adds a new public-key owner."},"domainSeparator()":{"notice":"Returns the `domainSeparator` used to create EIP-712 compliant hashes."},"eip712Domain()":{"notice":"Returns information about the `EIP712Domain` used to create EIP-712 compliant hashes."},"entryPoint()":{"notice":"Returns the address of the EntryPoint v0.6."},"execute(address,uint256,bytes)":{"notice":"Executes the given call from this account."},"executeBatch((address,uint256,bytes)[])":{"notice":"Executes batch of `Call`s."},"executeWithoutChainIdValidation(bytes[])":{"notice":"Executes `calls` on this account (i.e. self call)."},"getUserOpHashWithoutChainId((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes))":{"notice":"Computes the hash of the `UserOperation` in the same way as EntryPoint v0.6, but         leaves out the chain ID."},"implementation()":{"notice":"Returns the implementation of the ERC1967 proxy."},"initialize(bytes[])":{"notice":"Initializes the account with the `owners`."},"isOwnerAddress(address)":{"notice":"Checks if the given `account` address is registered as owner."},"isOwnerBytes(bytes)":{"notice":"Checks if the given `account` bytes is registered as owner."},"isOwnerPublicKey(bytes32,bytes32)":{"notice":"Checks if the given `x`, `y` public key is registered as owner."},"isValidSignature(bytes32,bytes)":{"notice":"Validates the `signature` against the given `hash`."},"nextOwnerIndex()":{"notice":"Returns the next index that will be used to add a new owner."},"ownerAtIndex(uint256)":{"notice":"Returns the owner bytes at the given `index`."},"ownerCount()":{"notice":"Returns the current number of owners"},"removeLastOwner(uint256,bytes)":{"notice":"Removes owner at the given `index`, which should be the only current owner."},"removeOwnerAtIndex(uint256,bytes)":{"notice":"Removes owner at the given `index`."},"removedOwnersCount()":{"notice":"Tracks the number of owners removed"},"replaySafeHash(bytes32)":{"notice":"Wrapper around `_eip712Hash()` to produce a replay-safe hash fron the given `hash`."},"validateUserOp((address,uint256,bytes,bytes,uint256,uint256,uint256,uint256,uint256,bytes,bytes),bytes32,uint256)":{"notice":"ERC-4337 `validateUserOp` method. The EntryPoint will         call `UserOperation.sender.call(UserOperation.callData)` only if this validation call returns         successfully."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","FreshCryptoLib/=lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/","account-abstraction/=lib/smart-wallet/lib/account-abstraction/contracts/","ds-test/=lib/smart-wallet/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","p256-verifier/=lib/smart-wallet/lib/p256-verifier/","safe-singleton-deployer-sol/=lib/smart-wallet/lib/safe-singleton-deployer-sol/","smart-wallet/=lib/smart-wallet/src/","solady/=lib/smart-wallet/lib/solady/src/","webauthn-sol/=lib/smart-wallet/lib/webauthn-sol/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/smart-wallet/src/CoinbaseSmartWallet.sol":"CoinbaseSmartWallet"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/openzeppelin-contracts/contracts/utils/Base64.sol":{"keccak256":"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2","urls":["bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389","dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR"],"license":"MIT"},"lib/smart-wallet/lib/account-abstraction/contracts/core/Helpers.sol":{"keccak256":"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a","urls":["bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746","dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"],"license":"GPL-3.0"},"lib/smart-wallet/lib/account-abstraction/contracts/interfaces/IAccount.sol":{"keccak256":"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418","urls":["bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4","dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"],"license":"GPL-3.0"},"lib/smart-wallet/lib/account-abstraction/contracts/interfaces/UserOperation.sol":{"keccak256":"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c","urls":["bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c","dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"],"license":"GPL-3.0"},"lib/smart-wallet/lib/solady/src/accounts/Receiver.sol":{"keccak256":"0x9bf48dca73f428c20a0878a5a97d2d66626f835b077c012fd5b1ba6389feb2d0","urls":["bzz-raw://15cb4c81e6c5b2f609e5c6ba13d3241b5c017f9997cab5cebc0572c2dd7f34da","dweb:/ipfs/QmQr7sWaqW27XhyCVGx4wED1rMmFKGhSHPjSGVLz45dbeD"],"license":"MIT"},"lib/smart-wallet/lib/solady/src/utils/LibString.sol":{"keccak256":"0x4fc555fe1ceb29162b143ce1564ac936099071c853065efc289f6c30c712f125","urls":["bzz-raw://8f9d3fdb7c03ed63323ae27e0176e080f27ca453f91bacb73f8d59b09da94cf7","dweb:/ipfs/Qmcix9BzxupvYYLX3t8wf4Wsf1yp1b2q65CJb5agaFPtQ9"],"license":"MIT"},"lib/smart-wallet/lib/solady/src/utils/SignatureCheckerLib.sol":{"keccak256":"0x7a7acc59723ed291f24d9a2ed019109c8be69f32701f35f8a61dc7fff6652379","urls":["bzz-raw://7bab15a03dfca0567d7472933ee4e776fc21f9dfb6c4dbc06934fa75eceeff5e","dweb:/ipfs/QmPUuKsRwpZXz15DpsoJMMPN9DtZiRvMfwjqJScxkppNsP"],"license":"MIT"},"lib/smart-wallet/lib/solady/src/utils/UUPSUpgradeable.sol":{"keccak256":"0x0f4da34fe99caf063e6d3a09d0a4ce783fdcd955b475d46ba00be48f7fda348f","urls":["bzz-raw://5f8e8e92e7b781a8b0d3fdb720915964f46354395a806e87aa7d0a355a024a83","dweb:/ipfs/QmdDmVgUstEYpVQn97jDdaACoqoqiEvcXjxtEhC8b6vmFC"],"license":"MIT"},"lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/FCL_ecdsa.sol":{"keccak256":"0x679d2e9a655cd7e156a0cfc24de0aca88d4e0b34a8e0dfe6a599f23af092f5a2","urls":["bzz-raw://db31eb84c6f854f076d2501e3d8b5a606fb4924168bdfc6fc3de84e67ed8a80d","dweb:/ipfs/QmWGAmc7B4aT6Ki52uF9QmPQKWipaptit7r3JknBHjUGfe"],"license":"MIT"},"lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/FCL_elliptic.sol":{"keccak256":"0xac7bb3260a446851f45b8cb71e31d64ca469d7711ed04662092a9554f1283a38","urls":["bzz-raw://f9b0dc5a2306ad3f3a0ff4a5b947fe49422181e97c163ea237fc8bfc6736429d","dweb:/ipfs/QmeruF7BvG5BNnqwqwdshoVXuXqXtajbUYB19KwPynHrQE"],"license":"MIT"},"lib/smart-wallet/lib/webauthn-sol/src/WebAuthn.sol":{"keccak256":"0x8b940975249f72155110e5e5b4611fc9031330538183862b9d8f12ea7c30ad25","urls":["bzz-raw://433957720c13a834b9aab98a5054e9dabe5c660a1a3fb267e6ad1a22b99b68ed","dweb:/ipfs/QmTkQxCCf8kDAHa6rBwLT2mxFXN3tSAWyx4rLmgcLkFkRh"],"license":"MIT"},"lib/smart-wallet/src/CoinbaseSmartWallet.sol":{"keccak256":"0xd731c0a9472c3383c0f8d5e95a88ea34f70c23a242045f8ece7524e7bb886c74","urls":["bzz-raw://4b9a0569def1d98b58f92572128681b9aa48ba224a0b182a06487f8a95704760","dweb:/ipfs/QmeMZVoPHBKbPA6eJzxczdpfynzkcqEfuDdiPPAwmkBFgN"],"license":"MIT"},"lib/smart-wallet/src/ERC1271.sol":{"keccak256":"0xa9e22c15b7bffce561ab4fcb430a796e306acbf1c8be757b9a2f15546e96ddd2","urls":["bzz-raw://25f8b3d4233c419174f99dc021b0c29fc4f85ed2278fec9419dae7d93a2d9481","dweb:/ipfs/QmTetkPJt5N4Ld9aDMySkjkQQeEBG75HA5LAHdU39ZqnhW"],"license":"MIT"},"lib/smart-wallet/src/MultiOwnable.sol":{"keccak256":"0x5d7763c89efcbfc8e139daceb1d9908ad181b242c0f20e0cf89271b9a3355a59","urls":["bzz-raw://8f8b62a1ab549680497eaa8af1f91eac05a52404903213eb9d0356d349e3e15f","dweb:/ipfs/QmTws27kzakWALcGPEqpsRVtqJFKJeUVCUj5TbM2N81Wu6"],"license":"MIT"}},"version":1},"id":48}