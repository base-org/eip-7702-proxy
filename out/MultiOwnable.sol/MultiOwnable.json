{"abi":[{"type":"function","name":"addOwnerAddress","inputs":[{"name":"owner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"addOwnerPublicKey","inputs":[{"name":"x","type":"bytes32","internalType":"bytes32"},{"name":"y","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isOwnerAddress","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOwnerBytes","inputs":[{"name":"account","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isOwnerPublicKey","inputs":[{"name":"x","type":"bytes32","internalType":"bytes32"},{"name":"y","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"nextOwnerIndex","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"ownerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"ownerCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeLastOwner","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"owner","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"owner","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removedOwnersCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"event","name":"AddOwner","inputs":[{"name":"index","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"RemoveOwner","inputs":[{"name":"index","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"owner","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false},{"type":"error","name":"AlreadyOwner","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"InvalidEthereumAddressOwner","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"InvalidOwnerBytesLength","inputs":[{"name":"owner","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"LastOwner","inputs":[]},{"type":"error","name":"NoOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"NotLastOwner","inputs":[{"name":"ownersRemaining","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"Unauthorized","inputs":[]},{"type":"error","name":"WrongOwnerAtIndex","inputs":[{"name":"index","type":"uint256","internalType":"uint256"},{"name":"expectedOwner","type":"bytes","internalType":"bytes"},{"name":"actualOwner","type":"bytes","internalType":"bytes"}]}],"bytecode":{"object":"0x6080806040523461001657610b5d908161001b8239f35b5f80fdfe6080604090808252600480361015610015575f80fd5b5f3560e01c918263066a1eb714610409575081630db02622146103e65781630f0f3f24146103a05781631ca5393f1461034857816329565e3b146102de57816336d9cf9b146102a157816389625b571461025d5781638ea6902914610162578163a2e1a8d814610129578163b8197367146100d9575063d948fd2e14610099575f80fd5b346100d5575f3660031901126100d5576020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00549051908152f35b5f80fd5b9050346100d5576100e9366104ff565b926100f59291926106aa565b6100fd6105d7565b6001811161011357505061011193506108e6565b005b8551631047e35560e31b81529182015260249150fd5b9050346100d55760203660031901126100d55735906001600160a01b03821682036100d557610159602092610681565b90519015158152f35b9050346100d557602090816003193601126100d557355f527f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f028152815f2091805180935f9080546101b281610649565b91828552600191876001821691825f146102365750506001146101f6575b5050506101f292916101e3910385610497565b5192828493845283019061056d565b0390f35b8693505f92919252825f20915f925b82841061021e57505050820101816101e36101f26101d0565b8054848a018601528895508794909301928101610205565b60ff19168782015293151560051b860190930193508492506101e391506101f290506101d0565b82346100d55761026c366104ff565b926102789291926106aa565b60016102826105d7565b14610292575061011193506108e6565b5163948bf89760e01b81528490fd5b82346100d5575f3660031901126100d5576020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01549051908152f35b82346100d557610111906102f136610435565b6102fc9291926106aa565b81519260208401528183015281526103138161044b565b7f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00908154916103418361063b565b90556106f0565b82346100d55760203660031901126100d557813567ffffffffffffffff81116100d557366023820112156100d55761039561039060209483602460ff953693013591016104b9565b610592565b541690519015158152f35b9050346100d55760203660031901126100d557356001600160a01b038116908190036100d557610111916103d26106aa565b51906020820152602081526103138161047b565b82346100d5575f3660031901126100d5576020906104026105d7565b9051908152f35b83346100d55760ff61039560209361042036610435565b9086830152848201528381526103908161044b565b60409060031901126100d5576004359060243590565b6060810190811067ffffffffffffffff82111761046757604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761046757604052565b90601f8019910116810190811067ffffffffffffffff82111761046757604052565b92919267ffffffffffffffff821161046757604051916104e3601f8201601f191660200184610497565b8294818452818301116100d5578281602093845f960137010152565b60406003198201126100d5576004359160243567ffffffffffffffff928382116100d557806023830112156100d55781600401359384116100d557602484830101116100d5576024019190565b5f5b83811061055d5750505f910152565b818101518382015260200161054e565b906020916105868151809281855285808601910161054c565b601f01601f1916010190565b60206105ab91816040519382858094519384920161054c565b81017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b7f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00547f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f015481039081116106275790565b634e487b7160e01b5f52601160045260245ffd5b5f1981146106275760010190565b90600182811c92168015610677575b602083101461066357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610658565b6106a560ff916040519060018060a01b03166020820152602081526103908161047b565b541690565b6106b333610681565b80156106d1575b6106cf576040516282b42960e81b8152600490fd5b565b503033146106ba565b8181106106e5575050565b5f81556001016106da565b60ff6106fb82610592565b541661089d5761070a81610592565b600190600160ff19825416179055825f526020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f02825260405f209083519067ffffffffffffffff8211610467576107628354610649565b601f8111610864575b508390601f83116001146107df575090807f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f378386220220959493925f916107d4575b508160011b915f199060031b1c19161790555b6107cf60405192828493845283019061056d565b0390a2565b90508401515f6107a8565b90601f198316845f52855f20925f905b82821061084d5750509183917f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209796959460019410610835575b5050811b0190556107bb565b8601515f1960f88460031b161c191690555f80610829565b8884015185559384019392870192908701906107ef565b61088d90845f52855f20601f850160051c810191878610610893575b601f0160051c01906106da565b5f61076b565b9091508190610880565b60405163468b12ad60e11b8152602060048201529081906108c290602483019061056d565b0390fd5b908060209392818452848401375f828201840152601f01601f1916010190565b9190825f527f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0290602091808352604090815f208251905f8282549161092a83610649565b92838352898301946001918b6001821691825f14610b07575050600114610acb575b505061095a92500383610497565b815115610ab357815190206109703688876104b9565b86815191012003610a72575091817fcf95bbfe6f870f8cc40482dc3dccdafd268f0e9ce0a4f24ea1bea9be64e505ff9594936107cf93518684823785818881017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902060ff198154169055875f528452805f206109f18154610649565b9081610a36575b50507f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01610a25815461063b565b9055519383859485528401916108c6565b81601f5f9311600114610a4d5750555b5f806109f8565b908083918252610a6b601f898420940160051c8401600185016106da565b5555610a46565b825163781f2e3960e01b815260048101889052606060248201529081906108c290610aa1606484018a896108c6565b8381036003190160448501529061056d565b835163340c473d60e11b815260048101899052602490fd5b8a92505f52815f20905f915b858310610aef57505061095a93508201015f8061094c565b80548389018501528794508b93909201918101610ad7565b925093505061095a94915060ff19168552151560051b8201015f8061094c56fea264697066735822122071746d807212a186f37c44216f6e58f0b87834daefb5aa619a9294ff6a7946cf64736f6c63430008170033","sourceMap":"1342:10254:50:-:0;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x6080604090808252600480361015610015575f80fd5b5f3560e01c918263066a1eb714610409575081630db02622146103e65781630f0f3f24146103a05781631ca5393f1461034857816329565e3b146102de57816336d9cf9b146102a157816389625b571461025d5781638ea6902914610162578163a2e1a8d814610129578163b8197367146100d9575063d948fd2e14610099575f80fd5b346100d5575f3660031901126100d5576020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00549051908152f35b5f80fd5b9050346100d5576100e9366104ff565b926100f59291926106aa565b6100fd6105d7565b6001811161011357505061011193506108e6565b005b8551631047e35560e31b81529182015260249150fd5b9050346100d55760203660031901126100d55735906001600160a01b03821682036100d557610159602092610681565b90519015158152f35b9050346100d557602090816003193601126100d557355f527f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f028152815f2091805180935f9080546101b281610649565b91828552600191876001821691825f146102365750506001146101f6575b5050506101f292916101e3910385610497565b5192828493845283019061056d565b0390f35b8693505f92919252825f20915f925b82841061021e57505050820101816101e36101f26101d0565b8054848a018601528895508794909301928101610205565b60ff19168782015293151560051b860190930193508492506101e391506101f290506101d0565b82346100d55761026c366104ff565b926102789291926106aa565b60016102826105d7565b14610292575061011193506108e6565b5163948bf89760e01b81528490fd5b82346100d5575f3660031901126100d5576020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01549051908152f35b82346100d557610111906102f136610435565b6102fc9291926106aa565b81519260208401528183015281526103138161044b565b7f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00908154916103418361063b565b90556106f0565b82346100d55760203660031901126100d557813567ffffffffffffffff81116100d557366023820112156100d55761039561039060209483602460ff953693013591016104b9565b610592565b541690519015158152f35b9050346100d55760203660031901126100d557356001600160a01b038116908190036100d557610111916103d26106aa565b51906020820152602081526103138161047b565b82346100d5575f3660031901126100d5576020906104026105d7565b9051908152f35b83346100d55760ff61039560209361042036610435565b9086830152848201528381526103908161044b565b60409060031901126100d5576004359060243590565b6060810190811067ffffffffffffffff82111761046757604052565b634e487b7160e01b5f52604160045260245ffd5b6040810190811067ffffffffffffffff82111761046757604052565b90601f8019910116810190811067ffffffffffffffff82111761046757604052565b92919267ffffffffffffffff821161046757604051916104e3601f8201601f191660200184610497565b8294818452818301116100d5578281602093845f960137010152565b60406003198201126100d5576004359160243567ffffffffffffffff928382116100d557806023830112156100d55781600401359384116100d557602484830101116100d5576024019190565b5f5b83811061055d5750505f910152565b818101518382015260200161054e565b906020916105868151809281855285808601910161054c565b601f01601f1916010190565b60206105ab91816040519382858094519384920161054c565b81017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902090565b7f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f00547f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f015481039081116106275790565b634e487b7160e01b5f52601160045260245ffd5b5f1981146106275760010190565b90600182811c92168015610677575b602083101461066357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610658565b6106a560ff916040519060018060a01b03166020820152602081526103908161047b565b541690565b6106b333610681565b80156106d1575b6106cf576040516282b42960e81b8152600490fd5b565b503033146106ba565b8181106106e5575050565b5f81556001016106da565b60ff6106fb82610592565b541661089d5761070a81610592565b600190600160ff19825416179055825f526020907f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f02825260405f209083519067ffffffffffffffff8211610467576107628354610649565b601f8111610864575b508390601f83116001146107df575090807f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f378386220220959493925f916107d4575b508160011b915f199060031b1c19161790555b6107cf60405192828493845283019061056d565b0390a2565b90508401515f6107a8565b90601f198316845f52855f20925f905b82821061084d5750509183917f38109edc26e166b5579352ce56a50813177eb25208fd90d61f2f3783862202209796959460019410610835575b5050811b0190556107bb565b8601515f1960f88460031b161c191690555f80610829565b8884015185559384019392870192908701906107ef565b61088d90845f52855f20601f850160051c810191878610610893575b601f0160051c01906106da565b5f61076b565b9091508190610880565b60405163468b12ad60e11b8152602060048201529081906108c290602483019061056d565b0390fd5b908060209392818452848401375f828201840152601f01601f1916010190565b9190825f527f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0290602091808352604090815f208251905f8282549161092a83610649565b92838352898301946001918b6001821691825f14610b07575050600114610acb575b505061095a92500383610497565b815115610ab357815190206109703688876104b9565b86815191012003610a72575091817fcf95bbfe6f870f8cc40482dc3dccdafd268f0e9ce0a4f24ea1bea9be64e505ff9594936107cf93518684823785818881017f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f0381520301902060ff198154169055875f528452805f206109f18154610649565b9081610a36575b50507f97e2c6aad4ce5d562ebfaa00db6b9e0fb66ea5d8162ed5b243f51a2e03086f01610a25815461063b565b9055519383859485528401916108c6565b81601f5f9311600114610a4d5750555b5f806109f8565b908083918252610a6b601f898420940160051c8401600185016106da565b5555610a46565b825163781f2e3960e01b815260048101889052606060248201529081906108c290610aa1606484018a896108c6565b8381036003190160448501529061056d565b835163340c473d60e11b815260048101899052602490fd5b8a92505f52815f20905f915b858310610aef57505061095a93508201015f8061094c565b80548389018501528794508b93909201918101610ad7565b925093505061095a94915060ff19168552151560051b8201015f8061094c56fea264697066735822122071746d807212a186f37c44216f6e58f0b87834daefb5aa619a9294ff6a7946cf64736f6c63430008170033","sourceMap":"1342:10254:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;6691:16;;1342:10254;6691:16;;;1342:10254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;11499:89;1342:10254;;;;;;;;;;;;;;;;;;;;:::i;:::-;3914:70;;;;;;:::i;:::-;5770:12;;:::i;:::-;5814:1;5796:19;;5792:86;;5915:5;;;;;;:::i;:::-;1342:10254;5792:86;1342:10254;;-1:-1:-1;;;5838:29:50;;;;;1342:10254;;;-1:-1:-1;5838:29:50;1342:10254;;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;-1:-1:-1;;;;;1342:10254:50;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7409:38;1342:10254;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1342:10254:50;;;;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;;;;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;;;;;;;;;:::i;:::-;3914:70;;;;;;:::i;:::-;5106:1;5090:12;;:::i;:::-;:17;5086:66;;5189:5;;;;;:::i;5086:66::-;1342:10254;-1:-1:-1;;;5130:11:50;;1342:10254;;5130:11;1342:10254;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;8340:44;1342:10254;;;;;;;;;;;;4536:42;1342:10254;;;;:::i;:::-;3914:70;;;;;:::i;:::-;1342:10254;;4518:16;;;;1342:10254;;;;;4518:16;;;;;:::i;:::-;11499:89;1342:10254;;;4536:42;;;;:::i;:::-;1342:10254;;4536:42;:::i;1342:10254::-;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1342:10254:50;;;;;-1:-1:-1;;;;;1342:10254:50;;;;;;;;4202:42;3914:70;;;:::i;:::-;1342:10254;4183:17;1342:10254;4183:17;;1342:10254;;4183:17;;;;;:::i;1342:10254::-;;;;;;;-1:-1:-1;;1342:10254:50;;;;;;;;:::i;:::-;;;;;;;;;;;;;;6691:16;1342:10254;;;;:::i;:::-;6691:16;;;;1342:10254;;;;;6691:16;;;;;;:::i;1342:10254::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;1342:10254:50;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;;;;;:::o;:::-;;-1:-1:-1;;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1342:10254:50;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;1342:10254:50;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;6657:33;1342:10254;;;;;;;:::o;7856:190::-;11499:89;1342:10254;8019:20;1342:10254;;;;;;;;7856:190;:::o;1342:10254::-;;;;-1:-1:-1;1342:10254:50;;;;;-1:-1:-1;1342:10254:50;;-1:-1:-1;;1342:10254:50;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;6145:154;1342:10254;;6145:154;1342:10254;;;;;;;;;6272:19;;;1342:10254;6272:19;;;;;;:::i;1342:10254::-;;;6145:154;:::o;11026:189::-;11085:26;11100:10;11085:26;:::i;:::-;:59;;;;11026:189;11081:96;;1342:10254;;-1:-1:-1;;;11194:14:50;;;;;11081:96;11160:7::o;11085:59::-;11138:4;;11100:10;11116:27;11085:59;;1342:10254;;;;;;;;:::o;:::-;;;;;;;;9610:324;1342:10254;;;;:::i;:::-;;;9698:51;;1342:10254;;;:::i;:::-;9846:4;1342:10254;9846:4;1342:10254;;;;;;;;;-1:-1:-1;1342:10254:50;;;9860:14;1342:10254;;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;;;:::i;:::-;;;;;;9610:324;1342:10254;;;;;;;;;;;;;9905:22;1342:10254;;;;-1:-1:-1;1342:10254:50;;;;;;9846:4;1342:10254;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9905:22;;;9610:324::o;1342:10254::-;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;9905:22;1342:10254;;;;9846:4;1342:10254;;;;;;;;;;;;;;;;;;;;;;7054:33;1342:10254;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;1342:10254:50;;;;9698:51;1342:10254;;-1:-1:-1;;;9730:19:50;;1342:10254;9730:19;;;1342:10254;;;;;;;;;;;:::i;:::-;9730:19;;;1342:10254;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;;;;;;;-1:-1:-1;;1342:10254:50;;;;:::o;10273:575::-;;;1342:10254;-1:-1:-1;1342:10254:50;7409:38;1342:10254;;;;;;;;;-1:-1:-1;1342:10254:50;;;;-1:-1:-1;1342:10254:50;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10421:18;10417:52;;1342:10254;;10483:17;;1342:10254;;;;;:::i;:::-;;;;;;10504:16;10483:37;10479:151;;1342:10254;;;10816:25;1342:10254;;;;;;;;;;;;;;;10714:9;1342:10254;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;;;-1:-1:-1;1342:10254:50;;;;;:::i;:::-;;;;;;10778:20;;;:22;1342:10254;;10778:22;:::i;:::-;1342:10254;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;10479:151;1342:10254;;-1:-1:-1;;;10543:76:50;;;;;1342:10254;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1342:10254:50;;;;;;;:::i;10417:52::-;1342:10254;;-1:-1:-1;;;10448:21:50;;;;;1342:10254;;;;;10448:21;1342:10254;;;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1342:10254:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"methodIdentifiers":{"addOwnerAddress(address)":"0f0f3f24","addOwnerPublicKey(bytes32,bytes32)":"29565e3b","isOwnerAddress(address)":"a2e1a8d8","isOwnerBytes(bytes)":"1ca5393f","isOwnerPublicKey(bytes32,bytes32)":"066a1eb7","nextOwnerIndex()":"d948fd2e","ownerAtIndex(uint256)":"8ea69029","ownerCount()":"0db02622","removeLastOwner(uint256,bytes)":"b8197367","removeOwnerAtIndex(uint256,bytes)":"89625b57","removedOwnersCount()":"36d9cf9b"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"AlreadyOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"InvalidEthereumAddressOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"InvalidOwnerBytesLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LastOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"NoOwnerAtIndex\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownersRemaining\",\"type\":\"uint256\"}],\"name\":\"NotLastOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"expectedOwner\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"actualOwner\",\"type\":\"bytes\"}],\"name\":\"WrongOwnerAtIndex\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"AddOwner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"RemoveOwner\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"addOwnerAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"addOwnerPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOwnerAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"account\",\"type\":\"bytes\"}],\"name\":\"isOwnerBytes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"x\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"y\",\"type\":\"bytes32\"}],\"name\":\"isOwnerPublicKey\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextOwnerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"ownerAtIndex\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"removeLastOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"owner\",\"type\":\"bytes\"}],\"name\":\"removeOwnerAtIndex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removedOwnersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Coinbase (https://github.com/coinbase/smart-wallet)\",\"errors\":{\"AlreadyOwner(bytes)\":[{\"params\":{\"owner\":\"The owner bytes.\"}}],\"InvalidEthereumAddressOwner(bytes)\":[{\"params\":{\"owner\":\"The invalid owner.\"}}],\"InvalidOwnerBytesLength(bytes)\":[{\"params\":{\"owner\":\"The invalid owner.\"}}],\"NoOwnerAtIndex(uint256)\":[{\"params\":{\"index\":\"The targeted index for removal.\"}}],\"NotLastOwner(uint256)\":[{\"params\":{\"ownersRemaining\":\"The number of current owners.\"}}],\"WrongOwnerAtIndex(uint256,bytes,bytes)\":[{\"params\":{\"actualOwner\":\"The actual owner at `index`.\",\"expectedOwner\":\"The owner passed in the remove call.\",\"index\":\"The index of the owner to be removed.\"}}]},\"events\":{\"AddOwner(uint256,bytes)\":{\"params\":{\"index\":\"The owner index of the owner added.\",\"owner\":\"The owner added.\"}},\"RemoveOwner(uint256,bytes)\":{\"params\":{\"index\":\"The owner index of the owner removed.\",\"owner\":\"The owner removed.\"}}},\"kind\":\"dev\",\"methods\":{\"addOwnerAddress(address)\":{\"params\":{\"owner\":\"The owner address.\"}},\"addOwnerPublicKey(bytes32,bytes32)\":{\"params\":{\"x\":\"The owner public key x coordinate.\",\"y\":\"The owner public key y coordinate.\"}},\"isOwnerAddress(address)\":{\"params\":{\"account\":\"The account address to check.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"isOwnerBytes(bytes)\":{\"params\":{\"account\":\"The account, should be ABI encoded address or public key.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"isOwnerPublicKey(bytes32,bytes32)\":{\"params\":{\"x\":\"The public key x coordinate.\",\"y\":\"The public key y coordinate.\"},\"returns\":{\"_0\":\"`true` if the account is an owner else `false`.\"}},\"nextOwnerIndex()\":{\"returns\":{\"_0\":\"The next index that will be used to add a new owner.\"}},\"ownerAtIndex(uint256)\":{\"params\":{\"index\":\"The index to lookup.\"},\"returns\":{\"_0\":\"The owner bytes (empty if no owner is registered at this `index`).\"}},\"ownerCount()\":{\"returns\":{\"_0\":\"The current owner count\"}},\"removeLastOwner(uint256,bytes)\":{\"details\":\"Reverts if the owner is not registered at `index`.Reverts if there is currently more than one owner.Reverts if `owner` does not match bytes found at `index`.\",\"params\":{\"index\":\"The index of the owner to be removed.\",\"owner\":\"The ABI encoded bytes of the owner to be removed.\"}},\"removeOwnerAtIndex(uint256,bytes)\":{\"details\":\"Reverts if the owner is not registered at `index`.Reverts if there is currently only one owner.Reverts if `owner` does not match bytes found at `index`.\",\"params\":{\"index\":\"The index of the owner to be removed.\",\"owner\":\"The ABI encoded bytes of the owner to be removed.\"}},\"removedOwnersCount()\":{\"details\":\"Used with `this.nextOwnerIndex` to avoid removing all owners\",\"returns\":{\"_0\":\"The number of owners that have been removed.\"}}},\"stateVariables\":{\"MUTLI_OWNABLE_STORAGE_LOCATION\":{\"details\":\"Slot for the `MultiOwnableStorage` struct in storage.      Computed from      keccak256(abi.encode(uint256(keccak256(\\\"coinbase.storage.MultiOwnable\\\")) - 1)) & ~bytes32(uint256(0xff))      Follows ERC-7201 (see https://eips.ethereum.org/EIPS/eip-7201).\"}},\"title\":\"Multi Ownable\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyOwner(bytes)\":[{\"notice\":\"Thrown when trying to add an already registered owner.\"}],\"InvalidEthereumAddressOwner(bytes)\":[{\"notice\":\"Thrown if a provided owner is 32 bytes long but does not fit in an `address` type.\"}],\"InvalidOwnerBytesLength(bytes)\":[{\"notice\":\"Thrown when a provided owner is neither 64 bytes long (for public key)         nor a ABI encoded address.\"}],\"LastOwner()\":[{\"notice\":\"Thrown when removeOwnerAtIndex is called and there is only one current owner.\"}],\"NoOwnerAtIndex(uint256)\":[{\"notice\":\"Thrown when trying to remove an owner from an index that is empty.\"}],\"NotLastOwner(uint256)\":[{\"notice\":\"Thrown when removeLastOwner is called and there is more than one current owner.\"}],\"Unauthorized()\":[{\"notice\":\"Thrown when the `msg.sender` is not an owner and is trying to call a privileged function.\"}],\"WrongOwnerAtIndex(uint256,bytes,bytes)\":[{\"notice\":\"Thrown when `owner` argument does not match owner found at index.\"}]},\"events\":{\"AddOwner(uint256,bytes)\":{\"notice\":\"Emitted when a new owner is registered.\"},\"RemoveOwner(uint256,bytes)\":{\"notice\":\"Emitted when an owner is removed.\"}},\"kind\":\"user\",\"methods\":{\"addOwnerAddress(address)\":{\"notice\":\"Adds a new Ethereum-address owner.\"},\"addOwnerPublicKey(bytes32,bytes32)\":{\"notice\":\"Adds a new public-key owner.\"},\"isOwnerAddress(address)\":{\"notice\":\"Checks if the given `account` address is registered as owner.\"},\"isOwnerBytes(bytes)\":{\"notice\":\"Checks if the given `account` bytes is registered as owner.\"},\"isOwnerPublicKey(bytes32,bytes32)\":{\"notice\":\"Checks if the given `x`, `y` public key is registered as owner.\"},\"nextOwnerIndex()\":{\"notice\":\"Returns the next index that will be used to add a new owner.\"},\"ownerAtIndex(uint256)\":{\"notice\":\"Returns the owner bytes at the given `index`.\"},\"ownerCount()\":{\"notice\":\"Returns the current number of owners\"},\"removeLastOwner(uint256,bytes)\":{\"notice\":\"Removes owner at the given `index`, which should be the only current owner.\"},\"removeOwnerAtIndex(uint256,bytes)\":{\"notice\":\"Removes owner at the given `index`.\"},\"removedOwnersCount()\":{\"notice\":\"Tracks the number of owners removed\"}},\"notice\":\"Auth contract allowing multiple owners, each identified as bytes.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/smart-wallet/src/MultiOwnable.sol\":\"MultiOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":FreshCryptoLib/=lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/\",\":account-abstraction/=lib/smart-wallet/lib/account-abstraction/contracts/\",\":ds-test/=lib/smart-wallet/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":p256-verifier/=lib/smart-wallet/lib/p256-verifier/\",\":safe-singleton-deployer-sol/=lib/smart-wallet/lib/safe-singleton-deployer-sol/\",\":smart-wallet/=lib/smart-wallet/src/\",\":solady/=lib/smart-wallet/lib/solady/src/\",\":webauthn-sol/=lib/smart-wallet/lib/webauthn-sol/src/\"],\"viaIR\":true},\"sources\":{\"lib/smart-wallet/src/MultiOwnable.sol\":{\"keccak256\":\"0x5d7763c89efcbfc8e139daceb1d9908ad181b242c0f20e0cf89271b9a3355a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f8b62a1ab549680497eaa8af1f91eac05a52404903213eb9d0356d349e3e15f\",\"dweb:/ipfs/QmTws27kzakWALcGPEqpsRVtqJFKJeUVCUj5TbM2N81Wu6\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.23+commit.f704f362"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"AlreadyOwner"},{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"InvalidEthereumAddressOwner"},{"inputs":[{"internalType":"bytes","name":"owner","type":"bytes"}],"type":"error","name":"InvalidOwnerBytesLength"},{"inputs":[],"type":"error","name":"LastOwner"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"type":"error","name":"NoOwnerAtIndex"},{"inputs":[{"internalType":"uint256","name":"ownersRemaining","type":"uint256"}],"type":"error","name":"NotLastOwner"},{"inputs":[],"type":"error","name":"Unauthorized"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"expectedOwner","type":"bytes"},{"internalType":"bytes","name":"actualOwner","type":"bytes"}],"type":"error","name":"WrongOwnerAtIndex"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256","indexed":true},{"internalType":"bytes","name":"owner","type":"bytes","indexed":false}],"type":"event","name":"AddOwner","anonymous":false},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256","indexed":true},{"internalType":"bytes","name":"owner","type":"bytes","indexed":false}],"type":"event","name":"RemoveOwner","anonymous":false},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addOwnerAddress"},{"inputs":[{"internalType":"bytes32","name":"x","type":"bytes32"},{"internalType":"bytes32","name":"y","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"addOwnerPublicKey"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isOwnerAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes","name":"account","type":"bytes"}],"stateMutability":"view","type":"function","name":"isOwnerBytes","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"x","type":"bytes32"},{"internalType":"bytes32","name":"y","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isOwnerPublicKey","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextOwnerIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerAtIndex","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"ownerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"owner","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"removeLastOwner"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"bytes","name":"owner","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"removeOwnerAtIndex"},{"inputs":[],"stateMutability":"view","type":"function","name":"removedOwnersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"addOwnerAddress(address)":{"params":{"owner":"The owner address."}},"addOwnerPublicKey(bytes32,bytes32)":{"params":{"x":"The owner public key x coordinate.","y":"The owner public key y coordinate."}},"isOwnerAddress(address)":{"params":{"account":"The account address to check."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"isOwnerBytes(bytes)":{"params":{"account":"The account, should be ABI encoded address or public key."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"isOwnerPublicKey(bytes32,bytes32)":{"params":{"x":"The public key x coordinate.","y":"The public key y coordinate."},"returns":{"_0":"`true` if the account is an owner else `false`."}},"nextOwnerIndex()":{"returns":{"_0":"The next index that will be used to add a new owner."}},"ownerAtIndex(uint256)":{"params":{"index":"The index to lookup."},"returns":{"_0":"The owner bytes (empty if no owner is registered at this `index`)."}},"ownerCount()":{"returns":{"_0":"The current owner count"}},"removeLastOwner(uint256,bytes)":{"details":"Reverts if the owner is not registered at `index`.Reverts if there is currently more than one owner.Reverts if `owner` does not match bytes found at `index`.","params":{"index":"The index of the owner to be removed.","owner":"The ABI encoded bytes of the owner to be removed."}},"removeOwnerAtIndex(uint256,bytes)":{"details":"Reverts if the owner is not registered at `index`.Reverts if there is currently only one owner.Reverts if `owner` does not match bytes found at `index`.","params":{"index":"The index of the owner to be removed.","owner":"The ABI encoded bytes of the owner to be removed."}},"removedOwnersCount()":{"details":"Used with `this.nextOwnerIndex` to avoid removing all owners","returns":{"_0":"The number of owners that have been removed."}}},"version":1},"userdoc":{"kind":"user","methods":{"addOwnerAddress(address)":{"notice":"Adds a new Ethereum-address owner."},"addOwnerPublicKey(bytes32,bytes32)":{"notice":"Adds a new public-key owner."},"isOwnerAddress(address)":{"notice":"Checks if the given `account` address is registered as owner."},"isOwnerBytes(bytes)":{"notice":"Checks if the given `account` bytes is registered as owner."},"isOwnerPublicKey(bytes32,bytes32)":{"notice":"Checks if the given `x`, `y` public key is registered as owner."},"nextOwnerIndex()":{"notice":"Returns the next index that will be used to add a new owner."},"ownerAtIndex(uint256)":{"notice":"Returns the owner bytes at the given `index`."},"ownerCount()":{"notice":"Returns the current number of owners"},"removeLastOwner(uint256,bytes)":{"notice":"Removes owner at the given `index`, which should be the only current owner."},"removeOwnerAtIndex(uint256,bytes)":{"notice":"Removes owner at the given `index`."},"removedOwnersCount()":{"notice":"Tracks the number of owners removed"}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","FreshCryptoLib/=lib/smart-wallet/lib/webauthn-sol/lib/FreshCryptoLib/solidity/src/","account-abstraction/=lib/smart-wallet/lib/account-abstraction/contracts/","ds-test/=lib/smart-wallet/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/","p256-verifier/=lib/smart-wallet/lib/p256-verifier/","safe-singleton-deployer-sol/=lib/smart-wallet/lib/safe-singleton-deployer-sol/","smart-wallet/=lib/smart-wallet/src/","solady/=lib/smart-wallet/lib/solady/src/","webauthn-sol/=lib/smart-wallet/lib/webauthn-sol/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/smart-wallet/src/MultiOwnable.sol":"MultiOwnable"},"evmVersion":"shanghai","libraries":{},"viaIR":true},"sources":{"lib/smart-wallet/src/MultiOwnable.sol":{"keccak256":"0x5d7763c89efcbfc8e139daceb1d9908ad181b242c0f20e0cf89271b9a3355a59","urls":["bzz-raw://8f8b62a1ab549680497eaa8af1f91eac05a52404903213eb9d0356d349e3e15f","dweb:/ipfs/QmTws27kzakWALcGPEqpsRVtqJFKJeUVCUj5TbM2N81Wu6"],"license":"MIT"}},"version":1},"id":50}